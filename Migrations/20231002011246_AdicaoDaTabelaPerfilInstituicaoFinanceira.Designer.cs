// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using sga_stif.Models;

#nullable disable

namespace sga_stif.Migrations
{
    [DbContext(typeof(ContextoBaseDados))]
    [Migration("20231002011246_AdicaoDaTabelaPerfilInstituicaoFinanceira")]
    partial class AdicaoDaTabelaPerfilInstituicaoFinanceira
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("sga_stif.Models.Acao", b =>
                {
                    b.Property<int>("IdAcao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAcao"), 1L, 1);

                    b.Property<bool>("AcaoMaster")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAcao");

                    b.ToTable("Acao", (string)null);

                    b.HasData(
                        new
                        {
                            IdAcao = 1,
                            AcaoMaster = true,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8348),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8340),
                            Eliminado = false,
                            Nome = "Administração"
                        },
                        new
                        {
                            IdAcao = 2,
                            AcaoMaster = false,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8355),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8354),
                            Eliminado = false,
                            Nome = "Criar"
                        },
                        new
                        {
                            IdAcao = 3,
                            AcaoMaster = false,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8356),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8356),
                            Eliminado = false,
                            Nome = "Editar"
                        },
                        new
                        {
                            IdAcao = 4,
                            AcaoMaster = false,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8357),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8357),
                            Eliminado = false,
                            Nome = "Eliminar"
                        });
                });

            modelBuilder.Entity("sga_stif.Models.Agencia", b =>
                {
                    b.Property<int>("IdAgencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAgencia"), 1L, 1);

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<int>("IdCidade")
                        .HasColumnType("int");

                    b.Property<int>("IdInstituicaoFinanceira")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAgencia");

                    b.HasIndex("IdCidade");

                    b.HasIndex("IdInstituicaoFinanceira");

                    b.ToTable("Agencia", (string)null);

                    b.HasData(
                        new
                        {
                            IdAgencia = 1,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(169),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(169),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 2,
                            Nome = "Ag. Fazenda"
                        },
                        new
                        {
                            IdAgencia = 2,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(173),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(172),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 2,
                            Nome = "Ag. Mindelo"
                        },
                        new
                        {
                            IdAgencia = 3,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(174),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(174),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 2,
                            Nome = "Ag. ASA"
                        },
                        new
                        {
                            IdAgencia = 4,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(176),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(175),
                            Eliminado = false,
                            IdCidade = 13,
                            IdInstituicaoFinanceira = 2,
                            Nome = "Ag. Assomada"
                        },
                        new
                        {
                            IdAgencia = 5,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(177),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(176),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 2,
                            Nome = "Ag. Espargos"
                        },
                        new
                        {
                            IdAgencia = 6,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(178),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(178),
                            Eliminado = false,
                            IdCidade = 9,
                            IdInstituicaoFinanceira = 2,
                            Nome = "Ag. Rª Grande"
                        },
                        new
                        {
                            IdAgencia = 7,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(179),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(179),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 2,
                            Nome = "Ag. St. Maria"
                        },
                        new
                        {
                            IdAgencia = 8,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(181),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(180),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 2,
                            Nome = "Ag. Plateau"
                        },
                        new
                        {
                            IdAgencia = 9,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(182),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(182),
                            Eliminado = false,
                            IdCidade = 3,
                            IdInstituicaoFinanceira = 2,
                            Nome = "Ag. Monte Sossego"
                        },
                        new
                        {
                            IdAgencia = 10,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(183),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(183),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 2,
                            Nome = "Ag. Palmarejo"
                        },
                        new
                        {
                            IdAgencia = 11,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(185),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(184),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 2,
                            Nome = "Ag. São Filipe"
                        },
                        new
                        {
                            IdAgencia = 12,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(186),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(185),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 2,
                            Nome = "Ag. Calheta S. Miguel"
                        },
                        new
                        {
                            IdAgencia = 13,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(187),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(187),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 2,
                            Nome = "Ag. Aeroporto da Praia"
                        },
                        new
                        {
                            IdAgencia = 14,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(188),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(188),
                            Eliminado = false,
                            IdCidade = 7,
                            IdInstituicaoFinanceira = 2,
                            Nome = "Ag. Boavista"
                        },
                        new
                        {
                            IdAgencia = 15,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(190),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(189),
                            Eliminado = false,
                            IdCidade = 12,
                            IdInstituicaoFinanceira = 2,
                            Nome = "Ag. Aeroporto do Sal"
                        },
                        new
                        {
                            IdAgencia = 16,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(191),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(190),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 2,
                            Nome = "Ag. Sucupira"
                        },
                        new
                        {
                            IdAgencia = 17,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(192),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(192),
                            Eliminado = false,
                            IdCidade = 14,
                            IdInstituicaoFinanceira = 2,
                            Nome = "Ag. CCV – São Domingos"
                        },
                        new
                        {
                            IdAgencia = 18,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(193),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(193),
                            Eliminado = false,
                            IdCidade = 18,
                            IdInstituicaoFinanceira = 2,
                            Nome = "Ag. Tarrafal"
                        },
                        new
                        {
                            IdAgencia = 19,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(195),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(194),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 2,
                            Nome = "Ag. Santa Cruz"
                        },
                        new
                        {
                            IdAgencia = 20,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(221),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(220),
                            Eliminado = false,
                            IdCidade = 8,
                            IdInstituicaoFinanceira = 2,
                            Nome = "Ag. CCV – Porto Novo"
                        },
                        new
                        {
                            IdAgencia = 21,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(223),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(222),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 2,
                            Nome = "Ag. CCV - Plateau"
                        },
                        new
                        {
                            IdAgencia = 22,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(224),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(223),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 2,
                            Nome = "Ag. A. São Filipe"
                        },
                        new
                        {
                            IdAgencia = 23,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(225),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(225),
                            Eliminado = false,
                            IdCidade = 16,
                            IdInstituicaoFinanceira = 2,
                            Nome = "Ag. Mosteiros"
                        },
                        new
                        {
                            IdAgencia = 24,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(226),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(226),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 2,
                            Nome = "Ag. Caixa Empresas"
                        },
                        new
                        {
                            IdAgencia = 25,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(228),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(227),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 2,
                            Nome = "Ag. Coculi"
                        },
                        new
                        {
                            IdAgencia = 26,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(229),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(228),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 2,
                            Nome = "Ag. Paul"
                        },
                        new
                        {
                            IdAgencia = 27,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(230),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(229),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 2,
                            Nome = "Ag. Fonte Cónego"
                        },
                        new
                        {
                            IdAgencia = 28,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(231),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(231),
                            Eliminado = false,
                            IdCidade = 7,
                            IdInstituicaoFinanceira = 2,
                            Nome = "Ag. Aeroporto Boavista"
                        },
                        new
                        {
                            IdAgencia = 29,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(232),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(232),
                            Eliminado = false,
                            IdCidade = 5,
                            IdInstituicaoFinanceira = 2,
                            Nome = "Ag. Maio"
                        },
                        new
                        {
                            IdAgencia = 30,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(233),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(233),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 2,
                            Nome = "Ag. Porto Novo"
                        },
                        new
                        {
                            IdAgencia = 31,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(235),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(234),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 2,
                            Nome = "Ag. Ribeira Brava"
                        },
                        new
                        {
                            IdAgencia = 32,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(236),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(235),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 2,
                            Nome = "Ag. Ribeira Brava"
                        },
                        new
                        {
                            IdAgencia = 33,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(237),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(237),
                            Eliminado = false,
                            IdCidade = 18,
                            IdInstituicaoFinanceira = 2,
                            Nome = "Ag. Tarrafal"
                        },
                        new
                        {
                            IdAgencia = 34,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(238),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(238),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 3,
                            Nome = "Ag. Praia"
                        },
                        new
                        {
                            IdAgencia = 35,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(239),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(239),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 3,
                            Nome = "Ag. S. Vicente "
                        },
                        new
                        {
                            IdAgencia = 36,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(241),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(240),
                            Eliminado = false,
                            IdCidade = 4,
                            IdInstituicaoFinanceira = 3,
                            Nome = "Ag. Sal"
                        },
                        new
                        {
                            IdAgencia = 37,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(242),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(241),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 3,
                            Nome = "Ag. S. Filipe"
                        },
                        new
                        {
                            IdAgencia = 38,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(243),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(243),
                            Eliminado = false,
                            IdCidade = 18,
                            IdInstituicaoFinanceira = 3,
                            Nome = "Ag. Tarrafal"
                        },
                        new
                        {
                            IdAgencia = 39,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(244),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(244),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 3,
                            Nome = "Ag. S. Catarina"
                        },
                        new
                        {
                            IdAgencia = 40,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(245),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(245),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 3,
                            Nome = "Ag. Porto Novo"
                        },
                        new
                        {
                            IdAgencia = 41,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(246),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(246),
                            Eliminado = false,
                            IdCidade = 9,
                            IdInstituicaoFinanceira = 3,
                            Nome = "Ag. Rª Grande"
                        },
                        new
                        {
                            IdAgencia = 42,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(248),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(247),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 3,
                            Nome = "Ag. Brava"
                        },
                        new
                        {
                            IdAgencia = 43,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(249),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(248),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 3,
                            Nome = "Ag. Boavista"
                        },
                        new
                        {
                            IdAgencia = 44,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(250),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(250),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 3,
                            Nome = "Ag. S. Nicolau"
                        },
                        new
                        {
                            IdAgencia = 45,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(251),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(251),
                            Eliminado = false,
                            IdCidade = 5,
                            IdInstituicaoFinanceira = 3,
                            Nome = "Ag. Maio"
                        },
                        new
                        {
                            IdAgencia = 46,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(252),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(252),
                            Eliminado = false,
                            IdCidade = 6,
                            IdInstituicaoFinanceira = 3,
                            Nome = "Ag. Santa Cruz"
                        },
                        new
                        {
                            IdAgencia = 47,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(254),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(253),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 3,
                            Nome = "Ag. Praça Nova"
                        },
                        new
                        {
                            IdAgencia = 48,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(255),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(254),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 3,
                            Nome = "Ag. ASA"
                        },
                        new
                        {
                            IdAgencia = 49,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(256),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(256),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 3,
                            Nome = "Ag. Avenida"
                        },
                        new
                        {
                            IdAgencia = 50,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(257),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(257),
                            Eliminado = false,
                            IdCidade = 3,
                            IdInstituicaoFinanceira = 3,
                            Nome = "Ag. Monte Sossego"
                        },
                        new
                        {
                            IdAgencia = 51,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(258),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(258),
                            Eliminado = false,
                            IdCidade = 3,
                            IdInstituicaoFinanceira = 3,
                            Nome = "Ag. Fonte Filipe"
                        },
                        new
                        {
                            IdAgencia = 52,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(260),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(259),
                            Eliminado = false,
                            IdCidade = 4,
                            IdInstituicaoFinanceira = 3,
                            Nome = "Ag. Santa Maria"
                        },
                        new
                        {
                            IdAgencia = 53,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(261),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(260),
                            Eliminado = false,
                            IdCidade = 16,
                            IdInstituicaoFinanceira = 3,
                            Nome = "Ag. Mosteiros"
                        },
                        new
                        {
                            IdAgencia = 54,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(262),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(261),
                            Eliminado = false,
                            IdCidade = 11,
                            IdInstituicaoFinanceira = 3,
                            Nome = "Ag. Tarrafal S. Nicolau"
                        },
                        new
                        {
                            IdAgencia = 55,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(263),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(263),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 3,
                            Nome = "Ag. ASA II"
                        },
                        new
                        {
                            IdAgencia = 56,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(264),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(264),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 3,
                            Nome = "Gabinete Empresas Sul"
                        },
                        new
                        {
                            IdAgencia = 57,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(265),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(265),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 3,
                            Nome = "Gabinete Empresas Norte"
                        },
                        new
                        {
                            IdAgencia = 58,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(267),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(266),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 3,
                            Nome = "Ag. S. Domingos"
                        },
                        new
                        {
                            IdAgencia = 59,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(268),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(268),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 3,
                            Nome = "Ag. Palmarejo"
                        },
                        new
                        {
                            IdAgencia = 60,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(269),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(269),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 3,
                            Nome = "Gabinete Empresas Sul II"
                        },
                        new
                        {
                            IdAgencia = 61,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(270),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(270),
                            Eliminado = false,
                            IdCidade = 4,
                            IdInstituicaoFinanceira = 3,
                            Nome = "Gabinete Empresas Sal"
                        },
                        new
                        {
                            IdAgencia = 62,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(271),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(271),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 3,
                            Nome = "Prol. Ach. São Filipe"
                        },
                        new
                        {
                            IdAgencia = 63,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(273),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(272),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 4,
                            Nome = "Ag. Praia"
                        },
                        new
                        {
                            IdAgencia = 64,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(274),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(273),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 4,
                            Nome = "Ag. Mindelo"
                        },
                        new
                        {
                            IdAgencia = 65,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(275),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(275),
                            Eliminado = false,
                            IdCidade = 13,
                            IdInstituicaoFinanceira = 4,
                            Nome = "Ag. Assomada"
                        },
                        new
                        {
                            IdAgencia = 66,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(276),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(276),
                            Eliminado = false,
                            IdCidade = 4,
                            IdInstituicaoFinanceira = 4,
                            Nome = "Ag. Aeroporto do Sal"
                        },
                        new
                        {
                            IdAgencia = 67,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(277),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(277),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 4,
                            Nome = "Ag. Boavista"
                        },
                        new
                        {
                            IdAgencia = 68,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(279),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(278),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 4,
                            Nome = "Ag. Porto Novo"
                        },
                        new
                        {
                            IdAgencia = 69,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(280),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(280),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 4,
                            Nome = "Ag. Terra Branca"
                        },
                        new
                        {
                            IdAgencia = 70,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(281),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(281),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 4,
                            Nome = "Ag. Palmarejo"
                        },
                        new
                        {
                            IdAgencia = 71,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(304),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(303),
                            Eliminado = false,
                            IdCidade = 3,
                            IdInstituicaoFinanceira = 4,
                            Nome = "Ag. Monte Sossego"
                        },
                        new
                        {
                            IdAgencia = 72,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(306),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(305),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 4,
                            Nome = "Ag. Santa Maria"
                        },
                        new
                        {
                            IdAgencia = 73,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(307),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(306),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 4,
                            Nome = "Ag. São Filipe"
                        },
                        new
                        {
                            IdAgencia = 74,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(308),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(308),
                            Eliminado = false,
                            IdCidade = 9,
                            IdInstituicaoFinanceira = 4,
                            Nome = "Ag. Rª Grande"
                        },
                        new
                        {
                            IdAgencia = 75,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(309),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(309),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 4,
                            Nome = "ASA – Private Banking"
                        },
                        new
                        {
                            IdAgencia = 76,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(310),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(310),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 4,
                            Nome = "Ag. Fazenda"
                        },
                        new
                        {
                            IdAgencia = 77,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(312),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(311),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 4,
                            Nome = "Ag. Órgãos"
                        },
                        new
                        {
                            IdAgencia = 78,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(313),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(312),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 4,
                            Nome = "Ag. Santa Cruz"
                        },
                        new
                        {
                            IdAgencia = 79,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(314),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(314),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 4,
                            Nome = "Ag. Ponta do Sol"
                        },
                        new
                        {
                            IdAgencia = 80,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(318),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(317),
                            Eliminado = false,
                            IdCidade = 5,
                            IdInstituicaoFinanceira = 4,
                            Nome = "Ag. Maio"
                        },
                        new
                        {
                            IdAgencia = 81,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(319),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(318),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 4,
                            Nome = "Centro de empresas"
                        },
                        new
                        {
                            IdAgencia = 82,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(320),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(319),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 4,
                            Nome = "Centro de empresas II"
                        },
                        new
                        {
                            IdAgencia = 83,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(321),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(321),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 4,
                            Nome = "Ag. Sede"
                        },
                        new
                        {
                            IdAgencia = 84,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(322),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(322),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 4,
                            Nome = "Núcleo N/ Residentes"
                        },
                        new
                        {
                            IdAgencia = 85,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(324),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(323),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 5,
                            Nome = "Ag. Sede"
                        },
                        new
                        {
                            IdAgencia = 86,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(325),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(324),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 5,
                            Nome = "Ag. ASA"
                        },
                        new
                        {
                            IdAgencia = 87,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(326),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(326),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 5,
                            Nome = "Ag. Mindelo"
                        },
                        new
                        {
                            IdAgencia = 88,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(327),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(327),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 5,
                            Nome = "Ag. Plateau"
                        },
                        new
                        {
                            IdAgencia = 89,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(328),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(328),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 5,
                            Nome = "Ag. Espargos"
                        },
                        new
                        {
                            IdAgencia = 90,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(330),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(329),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 5,
                            Nome = "Ag. Santa Maria"
                        },
                        new
                        {
                            IdAgencia = 91,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(331),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(330),
                            Eliminado = false,
                            IdCidade = 7,
                            IdInstituicaoFinanceira = 5,
                            Nome = "ag. Sal Rei – Boavista"
                        },
                        new
                        {
                            IdAgencia = 92,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(332),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(331),
                            Eliminado = false,
                            IdCidade = 13,
                            IdInstituicaoFinanceira = 5,
                            Nome = "Ag. Assomada"
                        },
                        new
                        {
                            IdAgencia = 93,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(333),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(333),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 5,
                            Nome = "Ag. Achada Grande Trás"
                        },
                        new
                        {
                            IdAgencia = 94,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(334),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(334),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 5,
                            Nome = "Gab. Particulares (Praia)"
                        },
                        new
                        {
                            IdAgencia = 95,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(335),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(335),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 5,
                            Nome = "Gab. Empresas (Praia)"
                        },
                        new
                        {
                            IdAgencia = 96,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(337),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(336),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 8,
                            Nome = "Ag. Sede"
                        },
                        new
                        {
                            IdAgencia = 97,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(338),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(337),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 8,
                            Nome = "Ag. Plateau"
                        },
                        new
                        {
                            IdAgencia = 98,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(339),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(339),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 8,
                            Nome = "Ag ASA"
                        },
                        new
                        {
                            IdAgencia = 99,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(340),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(340),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 8,
                            Nome = "Ag. Mindelo"
                        },
                        new
                        {
                            IdAgencia = 100,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(341),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(341),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 8,
                            Nome = "Ag. Espargos"
                        },
                        new
                        {
                            IdAgencia = 101,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(343),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(342),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 9,
                            Nome = "Ag. Sede"
                        },
                        new
                        {
                            IdAgencia = 102,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(344),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(343),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 9,
                            Nome = "Serviços Centrais"
                        },
                        new
                        {
                            IdAgencia = 103,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(345),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(345),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 9,
                            Nome = "Emigrantes"
                        },
                        new
                        {
                            IdAgencia = 104,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(346),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(346),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 9,
                            Nome = "Particulares Classic"
                        },
                        new
                        {
                            IdAgencia = 105,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(347),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(347),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 9,
                            Nome = "Afluentes"
                        },
                        new
                        {
                            IdAgencia = 106,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(349),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(348),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 9,
                            Nome = "Private"
                        },
                        new
                        {
                            IdAgencia = 107,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(351),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(351),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 9,
                            Nome = "Institucionais"
                        },
                        new
                        {
                            IdAgencia = 108,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(353),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(352),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 9,
                            Nome = "PME Nacionais"
                        },
                        new
                        {
                            IdAgencia = 109,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(354),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(353),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 9,
                            Nome = "Grandes Empresas Nacionais"
                        },
                        new
                        {
                            IdAgencia = 110,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(355),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(355),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 9,
                            Nome = "Corporate Internacional"
                        },
                        new
                        {
                            IdAgencia = 111,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(356),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(356),
                            Eliminado = false,
                            IdCidade = 4,
                            IdInstituicaoFinanceira = 9,
                            Nome = "Ag. Sal"
                        },
                        new
                        {
                            IdAgencia = 112,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(357),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(357),
                            Eliminado = false,
                            IdCidade = 4,
                            IdInstituicaoFinanceira = 9,
                            Nome = "Emigrantes Sal"
                        },
                        new
                        {
                            IdAgencia = 113,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(359),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(358),
                            Eliminado = false,
                            IdCidade = 4,
                            IdInstituicaoFinanceira = 9,
                            Nome = "Particulares Classic Sal"
                        },
                        new
                        {
                            IdAgencia = 114,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(360),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(359),
                            Eliminado = false,
                            IdCidade = 4,
                            IdInstituicaoFinanceira = 9,
                            Nome = "Afluentes Sal"
                        },
                        new
                        {
                            IdAgencia = 115,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(361),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(361),
                            Eliminado = false,
                            IdCidade = 4,
                            IdInstituicaoFinanceira = 9,
                            Nome = "Private Sal"
                        },
                        new
                        {
                            IdAgencia = 116,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(362),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(362),
                            Eliminado = false,
                            IdCidade = 4,
                            IdInstituicaoFinanceira = 9,
                            Nome = "Institucionais Sal"
                        },
                        new
                        {
                            IdAgencia = 117,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(363),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(363),
                            Eliminado = false,
                            IdCidade = 4,
                            IdInstituicaoFinanceira = 9,
                            Nome = "PME Nacionais Sal"
                        },
                        new
                        {
                            IdAgencia = 118,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(365),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(364),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 9,
                            Nome = "Grandes Empresas Nacionais Sal"
                        },
                        new
                        {
                            IdAgencia = 119,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(366),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(365),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 11,
                            Nome = "Ag. Sede - Praia"
                        },
                        new
                        {
                            IdAgencia = 120,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(367),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(366),
                            Eliminado = false,
                            IdCidade = 13,
                            IdInstituicaoFinanceira = 8,
                            Nome = "Ag. Assomada"
                        },
                        new
                        {
                            IdAgencia = 121,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(368),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(368),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 8,
                            Nome = "Ag. Sta Maria "
                        },
                        new
                        {
                            IdAgencia = 122,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(392),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(391),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 8,
                            Nome = "Agencia Sal-Rei "
                        },
                        new
                        {
                            IdAgencia = 123,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(393),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(393),
                            Eliminado = false,
                            IdCidade = 1,
                            IdInstituicaoFinanceira = 8,
                            Nome = "Agencia S.Filipe "
                        },
                        new
                        {
                            IdAgencia = 124,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(394),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(394),
                            Eliminado = false,
                            IdCidade = 3,
                            IdInstituicaoFinanceira = 8,
                            Nome = "Ag. Montsu "
                        });
                });

            modelBuilder.Entity("sga_stif.Models.Beneficiario", b =>
                {
                    b.Property<int>("IdBeneficiario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdBeneficiario"), 1L, 1);

                    b.Property<string>("Apelido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CinBi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataDeNascimento")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<int>("GrauDeParentesco")
                        .HasColumnType("int");

                    b.Property<int>("IdSocio")
                        .HasColumnType("int");

                    b.Property<string>("Nif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroPassaporte")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdBeneficiario");

                    b.HasIndex("IdSocio");

                    b.ToTable("Beneficiario", (string)null);
                });

            modelBuilder.Entity("sga_stif.Models.Cidade", b =>
                {
                    b.Property<int>("IdCidade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCidade"), 1L, 1);

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<int>("IdIlha")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCidade");

                    b.HasIndex("IdIlha");

                    b.ToTable("Cidade", (string)null);

                    b.HasData(
                        new
                        {
                            IdCidade = 1,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(71),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(70),
                            Eliminado = false,
                            IdIlha = 8,
                            Nome = "Praia"
                        },
                        new
                        {
                            IdCidade = 2,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(74),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(73),
                            Eliminado = false,
                            IdIlha = 8,
                            Nome = "Outro"
                        },
                        new
                        {
                            IdCidade = 3,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(75),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(75),
                            Eliminado = false,
                            IdIlha = 2,
                            Nome = "Mindelo"
                        },
                        new
                        {
                            IdCidade = 4,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(76),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(76),
                            Eliminado = false,
                            IdIlha = 5,
                            Nome = "Santa Maria"
                        },
                        new
                        {
                            IdCidade = 5,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(78),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(77),
                            Eliminado = false,
                            IdIlha = 7,
                            Nome = "Vila do Maio"
                        },
                        new
                        {
                            IdCidade = 6,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(79),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(78),
                            Eliminado = false,
                            IdIlha = 8,
                            Nome = "Santa Cruz"
                        },
                        new
                        {
                            IdCidade = 7,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(80),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(80),
                            Eliminado = false,
                            IdIlha = 6,
                            Nome = "Sal Rei"
                        },
                        new
                        {
                            IdCidade = 8,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(81),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(81),
                            Eliminado = false,
                            IdIlha = 1,
                            Nome = "Porto Novo"
                        },
                        new
                        {
                            IdCidade = 9,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(82),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(82),
                            Eliminado = false,
                            IdIlha = 8,
                            Nome = "Ribeira Grande"
                        },
                        new
                        {
                            IdCidade = 10,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(83),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(83),
                            Eliminado = false,
                            IdIlha = 10,
                            Nome = "Ribeira Brava"
                        },
                        new
                        {
                            IdCidade = 11,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(85),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(84),
                            Eliminado = false,
                            IdIlha = 1,
                            Nome = "Tarrafal"
                        },
                        new
                        {
                            IdCidade = 12,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(86),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(85),
                            Eliminado = false,
                            IdIlha = 5,
                            Nome = "Espargos"
                        },
                        new
                        {
                            IdCidade = 13,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(87),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(86),
                            Eliminado = false,
                            IdIlha = 8,
                            Nome = "Assomada"
                        },
                        new
                        {
                            IdCidade = 14,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(88),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(88),
                            Eliminado = false,
                            IdIlha = 8,
                            Nome = "São Domingos"
                        },
                        new
                        {
                            IdCidade = 15,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(89),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(89),
                            Eliminado = false,
                            IdIlha = 9,
                            Nome = "São Filipe"
                        },
                        new
                        {
                            IdCidade = 16,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(90),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(90),
                            Eliminado = false,
                            IdIlha = 9,
                            Nome = "Mosteiros"
                        },
                        new
                        {
                            IdCidade = 17,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(125),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(123),
                            Eliminado = false,
                            IdIlha = 1,
                            Nome = "Nova Sintra"
                        },
                        new
                        {
                            IdCidade = 18,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(126),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(126),
                            Eliminado = false,
                            IdIlha = 8,
                            Nome = "Tarrafal (Santiano)"
                        });
                });

            modelBuilder.Entity("sga_stif.Models.EstadoSocio", b =>
                {
                    b.Property<int>("IdEstadoSocio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstadoSocio"), 1L, 1);

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<int>("IdSocio")
                        .HasColumnType("int");

                    b.HasKey("IdEstadoSocio");

                    b.HasIndex("IdSocio");

                    b.ToTable("EstadoSocio", (string)null);
                });

            modelBuilder.Entity("sga_stif.Models.Ilha", b =>
                {
                    b.Property<int>("IdIlha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdIlha"), 1L, 1);

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdIlha");

                    b.ToTable("Ilha", (string)null);

                    b.HasData(
                        new
                        {
                            IdIlha = 1,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(47),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(47),
                            Eliminado = false,
                            Nome = "Santo Antão"
                        },
                        new
                        {
                            IdIlha = 2,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(50),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(50),
                            Eliminado = false,
                            Nome = "São Vicente"
                        },
                        new
                        {
                            IdIlha = 3,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(52),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(51),
                            Eliminado = false,
                            Nome = "Santa Luzia"
                        },
                        new
                        {
                            IdIlha = 4,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(53),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(52),
                            Eliminado = false,
                            Nome = "São Nicolau"
                        },
                        new
                        {
                            IdIlha = 5,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(54),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(54),
                            Eliminado = false,
                            Nome = "Sal"
                        },
                        new
                        {
                            IdIlha = 6,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(55),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(55),
                            Eliminado = false,
                            Nome = "Boavista"
                        },
                        new
                        {
                            IdIlha = 7,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(57),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(56),
                            Eliminado = false,
                            Nome = "Maio"
                        },
                        new
                        {
                            IdIlha = 8,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(58),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(57),
                            Eliminado = false,
                            Nome = "Santiago"
                        },
                        new
                        {
                            IdIlha = 9,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(59),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(58),
                            Eliminado = false,
                            Nome = "Fogo"
                        },
                        new
                        {
                            IdIlha = 10,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(60),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(60),
                            Eliminado = false,
                            Nome = "Brava"
                        });
                });

            modelBuilder.Entity("sga_stif.Models.InstituicaoFinanceira", b =>
                {
                    b.Property<int>("IdInstituicaoFinanceira")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdInstituicaoFinanceira"), 1L, 1);

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdInstituicaoFinanceira");

                    b.ToTable("InstituicaoFinanceira", (string)null);

                    b.HasData(
                        new
                        {
                            IdInstituicaoFinanceira = 2,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(150),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(150),
                            Eliminado = false,
                            Nome = "Caixa Económica de Cabo Verde",
                            Sigla = "CECV"
                        },
                        new
                        {
                            IdInstituicaoFinanceira = 3,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(153),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(153),
                            Eliminado = false,
                            Nome = "Banco Comercial do Atlântico",
                            Sigla = "BCA"
                        },
                        new
                        {
                            IdInstituicaoFinanceira = 4,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(155),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(155),
                            Eliminado = false,
                            Nome = "Banco Caboverdiano de Negócios",
                            Sigla = "BCN"
                        },
                        new
                        {
                            IdInstituicaoFinanceira = 5,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(157),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(156),
                            Eliminado = false,
                            Nome = "Banco Interatlântico",
                            Sigla = "BI"
                        },
                        new
                        {
                            IdInstituicaoFinanceira = 8,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(158),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(157),
                            Eliminado = false,
                            Nome = "Banco Angolano de Investimentos",
                            Sigla = "BAI"
                        },
                        new
                        {
                            IdInstituicaoFinanceira = 9,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(159),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(159),
                            Eliminado = false,
                            Nome = "International Investment Bank",
                            Sigla = "IIB"
                        },
                        new
                        {
                            IdInstituicaoFinanceira = 11,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(160),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(160),
                            Eliminado = false,
                            Nome = "Ecobank Cabo Verde SA",
                            Sigla = "ECV"
                        });
                });

            modelBuilder.Entity("sga_stif.Models.InstituicaoFinanceiraColaboradores", b =>
                {
                    b.Property<int>("IdInstituicaoFinanceiraColaboradores")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdInstituicaoFinanceiraColaboradores"), 1L, 1);

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<int>("IdInstituicaoFinanceira")
                        .HasColumnType("int");

                    b.Property<int>("NumeroColaboradores")
                        .HasColumnType("int");

                    b.HasKey("IdInstituicaoFinanceiraColaboradores");

                    b.HasIndex("IdInstituicaoFinanceira");

                    b.ToTable("InstituicaoFinanceiraColaboradores", (string)null);
                });

            modelBuilder.Entity("sga_stif.Models.Joia", b =>
                {
                    b.Property<int>("IdJoia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdJoia"), 1L, 1);

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<decimal>("Montante")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdJoia");

                    b.ToTable("Joia", (string)null);

                    b.HasData(
                        new
                        {
                            IdJoia = 1,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8465),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8464),
                            DataInicio = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8473),
                            Descricao = "Jóia STIF",
                            Eliminado = false,
                            Montante = 1000m
                        });
                });

            modelBuilder.Entity("sga_stif.Models.JoiaSocio", b =>
                {
                    b.Property<int>("IdJoiaSocio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdJoiaSocio"), 1L, 1);

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<int>("IdJoia")
                        .HasColumnType("int");

                    b.Property<int>("IdSocio")
                        .HasColumnType("int");

                    b.Property<decimal>("Montante")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdJoiaSocio");

                    b.HasIndex("IdJoia");

                    b.HasIndex("IdSocio");

                    b.ToTable("JoiaSocio", (string)null);
                });

            modelBuilder.Entity("sga_stif.Models.LogAtividade", b =>
                {
                    b.Property<int>("IdLogAtividades")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLogAtividades"), 1L, 1);

                    b.Property<string>("Dados")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<string>("EnderecoIp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeUtilizador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdLogAtividades");

                    b.ToTable("LogAtividade");
                });

            modelBuilder.Entity("sga_stif.Models.Menu", b =>
                {
                    b.Property<int>("IdMenu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMenu"), 1L, 1);

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<string>("Icone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdMenuPai")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeDaAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeDoController")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdMenu");

                    b.ToTable("Menu", (string)null);

                    b.HasData(
                        new
                        {
                            IdMenu = 1,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8484),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8483),
                            Descricao = "Gestão de Sócios",
                            Eliminado = false,
                            Icone = "fas fa-user",
                            Nome = "Gestão de Sócios",
                            NomeDaAction = "",
                            NomeDoController = ""
                        },
                        new
                        {
                            IdMenu = 2,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8494),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8494),
                            Descricao = "Lista de Sócios",
                            Eliminado = false,
                            Icone = "far fa-circle",
                            IdMenuPai = 1,
                            Nome = "Lista  Sócios",
                            NomeDaAction = "ListaSocio",
                            NomeDoController = "Socio"
                        },
                        new
                        {
                            IdMenu = 3,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8496),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8496),
                            Descricao = "Ranquing de Sócios",
                            Eliminado = false,
                            Icone = "far fa-circle",
                            IdMenuPai = 1,
                            Nome = "Ranking Sócios",
                            NomeDaAction = "RakingSocio",
                            NomeDoController = "Socio"
                        },
                        new
                        {
                            IdMenu = 4,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8498),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8497),
                            Descricao = "Contas Correntes",
                            Eliminado = false,
                            Icone = "fas fa-book",
                            Nome = "Contas Correntes",
                            NomeDaAction = "",
                            NomeDoController = ""
                        },
                        new
                        {
                            IdMenu = 5,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8499),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8499),
                            Descricao = "Quotas Pendentes",
                            Eliminado = false,
                            Icone = "far fa-circle",
                            IdMenuPai = 4,
                            Nome = "Quotas Pendentes",
                            NomeDaAction = "ListaQuotasPendente",
                            NomeDoController = "ContaCorrentes"
                        },
                        new
                        {
                            IdMenu = 6,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8502),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8501),
                            Descricao = "Quotas Por Pagar",
                            Eliminado = false,
                            Icone = "far fa-circle",
                            IdMenuPai = 4,
                            Nome = "Quotas Por Pagar",
                            NomeDaAction = "ListaQuotasPorPagar",
                            NomeDoController = "ContaCorrentes"
                        },
                        new
                        {
                            IdMenu = 7,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8503),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8503),
                            Descricao = "Quotas Paga",
                            Eliminado = false,
                            Icone = "far fa-circle",
                            IdMenuPai = 4,
                            Nome = "Quotas Pagas",
                            NomeDaAction = "ListaQuotasPagas",
                            NomeDoController = "ContaCorrentes"
                        },
                        new
                        {
                            IdMenu = 8,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8504),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8504),
                            Descricao = "Quotas Vencidas",
                            Eliminado = false,
                            Icone = "far fa-circle",
                            IdMenuPai = 4,
                            Nome = "Quotas Vencidas",
                            NomeDaAction = "ListaQuotasVencidas",
                            NomeDoController = "ContaCorrentes"
                        },
                        new
                        {
                            IdMenu = 9,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8506),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8506),
                            Descricao = "Posição de IF",
                            Eliminado = false,
                            Icone = "fas fa-search",
                            Nome = "Posição de IF",
                            NomeDaAction = "PosicaoDasInstituicoesFinanceiras",
                            NomeDoController = "PosicaoIFs"
                        },
                        new
                        {
                            IdMenu = 10,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8508),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8507),
                            Descricao = "Projeção de Quotas",
                            Eliminado = false,
                            Icone = "fas fa-table",
                            Nome = "Projeção de Quotas",
                            NomeDaAction = "ListaProjecaoFluxo",
                            NomeDoController = "ProjecaoFluxo"
                        },
                        new
                        {
                            IdMenu = 11,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8509),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8509),
                            Descricao = "Estatística",
                            Eliminado = false,
                            Icone = "fas fa-chart-pie",
                            Nome = "Estatística",
                            NomeDaAction = "Inicio",
                            NomeDoController = "Estatistica"
                        },
                        new
                        {
                            IdMenu = 12,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8510),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8510),
                            Descricao = "Configurações",
                            Eliminado = false,
                            Icone = "far fa-edit",
                            Nome = "Configurações",
                            NomeDaAction = "",
                            NomeDoController = ""
                        },
                        new
                        {
                            IdMenu = 13,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8512),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8511),
                            Descricao = "Instituição Financeira",
                            Eliminado = false,
                            Icone = "far fa-circle",
                            IdMenuPai = 12,
                            Nome = "Utilizadores",
                            NomeDaAction = "ListaUtilizador",
                            NomeDoController = "Utilizador"
                        },
                        new
                        {
                            IdMenu = 14,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8513),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8513),
                            Descricao = "Instituição Financeira",
                            Eliminado = false,
                            Icone = "far fa-circle",
                            IdMenuPai = 12,
                            Nome = "Perfil",
                            NomeDaAction = "ListaPerfil",
                            NomeDoController = "Perfil"
                        },
                        new
                        {
                            IdMenu = 15,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8515),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8514),
                            Descricao = "Gestão de Menu",
                            Eliminado = false,
                            Icone = "far fa-circle",
                            IdMenuPai = 12,
                            Nome = "Menu",
                            NomeDaAction = "ListaMenu",
                            NomeDoController = "MenuAcao"
                        },
                        new
                        {
                            IdMenu = 16,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8516),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8516),
                            Descricao = "Instituição Financeira",
                            Eliminado = false,
                            Icone = "far fa-circle",
                            IdMenuPai = 12,
                            Nome = "Instituição Financeira",
                            NomeDaAction = "ListaInstituicaoFinanceira",
                            NomeDoController = "InstituicaoFinanceira"
                        },
                        new
                        {
                            IdMenu = 17,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8636),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8636),
                            Descricao = "Agência",
                            Eliminado = false,
                            Icone = "far fa-circle",
                            IdMenuPai = 12,
                            Nome = "Agência",
                            NomeDaAction = "ListaAgencia",
                            NomeDoController = "Agencia"
                        },
                        new
                        {
                            IdMenu = 18,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8639),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8638),
                            Descricao = "Tipo Quotas",
                            Eliminado = false,
                            Icone = "far fa-circle",
                            IdMenuPai = 12,
                            Nome = "Tipo Quotas",
                            NomeDaAction = "ListaTipoQuota",
                            NomeDoController = "TipoQuota"
                        },
                        new
                        {
                            IdMenu = 19,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8640),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8640),
                            Descricao = "Tipologia Sócio",
                            Eliminado = false,
                            Icone = "far fa-circle",
                            IdMenuPai = 12,
                            Nome = "Tipologia Sócio",
                            NomeDaAction = "ListaTipologiaSocio",
                            NomeDoController = "TipologiaSocio"
                        });
                });

            modelBuilder.Entity("sga_stif.Models.MenuAcao", b =>
                {
                    b.Property<int>("IdMenuAcao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMenuAcao"), 1L, 1);

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<int?>("IdAcao")
                        .HasColumnType("int");

                    b.Property<int?>("IdMenu")
                        .HasColumnType("int");

                    b.Property<bool>("MenuAcaoMaster")
                        .HasColumnType("bit");

                    b.HasKey("IdMenuAcao");

                    b.HasIndex("IdAcao");

                    b.HasIndex("IdMenu");

                    b.ToTable("MenuAcao", (string)null);

                    b.HasData(
                        new
                        {
                            IdMenuAcao = 1,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8686),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8685),
                            Eliminado = false,
                            IdAcao = 1,
                            IdMenu = 1,
                            MenuAcaoMaster = true
                        },
                        new
                        {
                            IdMenuAcao = 2,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8691),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8690),
                            Eliminado = false,
                            IdAcao = 1,
                            IdMenu = 2,
                            MenuAcaoMaster = true
                        },
                        new
                        {
                            IdMenuAcao = 3,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8692),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8692),
                            Eliminado = false,
                            IdAcao = 1,
                            IdMenu = 3,
                            MenuAcaoMaster = true
                        },
                        new
                        {
                            IdMenuAcao = 4,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8693),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8693),
                            Eliminado = false,
                            IdAcao = 1,
                            IdMenu = 4,
                            MenuAcaoMaster = true
                        },
                        new
                        {
                            IdMenuAcao = 5,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8695),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8694),
                            Eliminado = false,
                            IdAcao = 1,
                            IdMenu = 5,
                            MenuAcaoMaster = true
                        },
                        new
                        {
                            IdMenuAcao = 6,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8696),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8696),
                            Eliminado = false,
                            IdAcao = 1,
                            IdMenu = 6,
                            MenuAcaoMaster = true
                        },
                        new
                        {
                            IdMenuAcao = 7,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8698),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8697),
                            Eliminado = false,
                            IdAcao = 1,
                            IdMenu = 7,
                            MenuAcaoMaster = true
                        },
                        new
                        {
                            IdMenuAcao = 8,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8699),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8698),
                            Eliminado = false,
                            IdAcao = 1,
                            IdMenu = 8,
                            MenuAcaoMaster = true
                        },
                        new
                        {
                            IdMenuAcao = 9,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8700),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8699),
                            Eliminado = false,
                            IdAcao = 1,
                            IdMenu = 9,
                            MenuAcaoMaster = true
                        },
                        new
                        {
                            IdMenuAcao = 10,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8702),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8701),
                            Eliminado = false,
                            IdAcao = 1,
                            IdMenu = 10,
                            MenuAcaoMaster = true
                        },
                        new
                        {
                            IdMenuAcao = 11,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8703),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8702),
                            Eliminado = false,
                            IdAcao = 1,
                            IdMenu = 11,
                            MenuAcaoMaster = true
                        },
                        new
                        {
                            IdMenuAcao = 12,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8704),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8704),
                            Eliminado = false,
                            IdAcao = 1,
                            IdMenu = 12,
                            MenuAcaoMaster = true
                        },
                        new
                        {
                            IdMenuAcao = 13,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8705),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8705),
                            Eliminado = false,
                            IdAcao = 1,
                            IdMenu = 13,
                            MenuAcaoMaster = true
                        },
                        new
                        {
                            IdMenuAcao = 14,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8706),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8706),
                            Eliminado = false,
                            IdAcao = 1,
                            IdMenu = 14,
                            MenuAcaoMaster = true
                        },
                        new
                        {
                            IdMenuAcao = 15,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8707),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8707),
                            Eliminado = false,
                            IdAcao = 1,
                            IdMenu = 15,
                            MenuAcaoMaster = true
                        },
                        new
                        {
                            IdMenuAcao = 16,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8709),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8708),
                            Eliminado = false,
                            IdAcao = 1,
                            IdMenu = 16,
                            MenuAcaoMaster = true
                        },
                        new
                        {
                            IdMenuAcao = 17,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8710),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8709),
                            Eliminado = false,
                            IdAcao = 1,
                            IdMenu = 17,
                            MenuAcaoMaster = true
                        },
                        new
                        {
                            IdMenuAcao = 18,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8712),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8711),
                            Eliminado = false,
                            IdAcao = 1,
                            IdMenu = 18,
                            MenuAcaoMaster = true
                        },
                        new
                        {
                            IdMenuAcao = 19,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8713),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8712),
                            Eliminado = false,
                            IdAcao = 1,
                            IdMenu = 19,
                            MenuAcaoMaster = true
                        });
                });

            modelBuilder.Entity("sga_stif.Models.Perfil", b =>
                {
                    b.Property<int>("IdPerfil")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPerfil"), 1L, 1);

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Editavel")
                        .HasColumnType("bit");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPerfil");

                    b.ToTable("Perfil", (string)null);

                    b.HasData(
                        new
                        {
                            IdPerfil = 1,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(137),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(136),
                            Descricao = "Perfil de Administrador",
                            Editavel = false,
                            Eliminado = false,
                            Nome = "Administrador"
                        },
                        new
                        {
                            IdPerfil = 2,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(141),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(140),
                            Descricao = "Perfil de Operador",
                            Editavel = true,
                            Eliminado = false,
                            Nome = "Auditor"
                        },
                        new
                        {
                            IdPerfil = 3,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(143),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(142),
                            Descricao = "Perfil de Operador",
                            Editavel = true,
                            Eliminado = false,
                            Nome = "Operador Teste"
                        });
                });

            modelBuilder.Entity("sga_stif.Models.PerfilInstituicaoFinanceira", b =>
                {
                    b.Property<int>("IdPerfilInstituicaoFinanceira")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPerfilInstituicaoFinanceira"), 1L, 1);

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<int>("IdInstituicaoFinanceira")
                        .HasColumnType("int");

                    b.Property<int>("IdPPerfil")
                        .HasColumnType("int");

                    b.Property<int?>("PerfilIdPerfil")
                        .HasColumnType("int");

                    b.Property<bool>("Permitido")
                        .HasColumnType("bit");

                    b.HasKey("IdPerfilInstituicaoFinanceira");

                    b.HasIndex("PerfilIdPerfil");

                    b.ToTable("PerfilInstituicaoFinanceira");
                });

            modelBuilder.Entity("sga_stif.Models.PerfilMenuAcao", b =>
                {
                    b.Property<int>("IdPerfilMenuAcao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPerfilMenuAcao"), 1L, 1);

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<int>("IdMenuAcao")
                        .HasColumnType("int");

                    b.Property<int>("IdPPerfil")
                        .HasColumnType("int");

                    b.HasKey("IdPerfilMenuAcao");

                    b.HasIndex("IdMenuAcao");

                    b.HasIndex("IdPPerfil");

                    b.ToTable("PerfilMenuAcao", (string)null);

                    b.HasData(
                        new
                        {
                            IdPerfilMenuAcao = 1,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8744),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8743),
                            Eliminado = false,
                            IdMenuAcao = 1,
                            IdPPerfil = 1
                        },
                        new
                        {
                            IdPerfilMenuAcao = 2,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8747),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8747),
                            Eliminado = false,
                            IdMenuAcao = 2,
                            IdPPerfil = 1
                        },
                        new
                        {
                            IdPerfilMenuAcao = 3,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8749),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8748),
                            Eliminado = false,
                            IdMenuAcao = 3,
                            IdPPerfil = 1
                        },
                        new
                        {
                            IdPerfilMenuAcao = 4,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8750),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8750),
                            Eliminado = false,
                            IdMenuAcao = 4,
                            IdPPerfil = 1
                        },
                        new
                        {
                            IdPerfilMenuAcao = 5,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8751),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8751),
                            Eliminado = false,
                            IdMenuAcao = 5,
                            IdPPerfil = 1
                        },
                        new
                        {
                            IdPerfilMenuAcao = 6,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8752),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8752),
                            Eliminado = false,
                            IdMenuAcao = 6,
                            IdPPerfil = 1
                        },
                        new
                        {
                            IdPerfilMenuAcao = 7,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8753),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8753),
                            Eliminado = false,
                            IdMenuAcao = 7,
                            IdPPerfil = 1
                        },
                        new
                        {
                            IdPerfilMenuAcao = 8,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8755),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8754),
                            Eliminado = false,
                            IdMenuAcao = 8,
                            IdPPerfil = 1
                        },
                        new
                        {
                            IdPerfilMenuAcao = 9,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8756),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8755),
                            Eliminado = false,
                            IdMenuAcao = 9,
                            IdPPerfil = 1
                        },
                        new
                        {
                            IdPerfilMenuAcao = 10,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8757),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8757),
                            Eliminado = false,
                            IdMenuAcao = 10,
                            IdPPerfil = 1
                        },
                        new
                        {
                            IdPerfilMenuAcao = 11,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8758),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8758),
                            Eliminado = false,
                            IdMenuAcao = 11,
                            IdPPerfil = 1
                        },
                        new
                        {
                            IdPerfilMenuAcao = 12,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8760),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8759),
                            Eliminado = false,
                            IdMenuAcao = 12,
                            IdPPerfil = 1
                        },
                        new
                        {
                            IdPerfilMenuAcao = 13,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8761),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8760),
                            Eliminado = false,
                            IdMenuAcao = 13,
                            IdPPerfil = 1
                        },
                        new
                        {
                            IdPerfilMenuAcao = 14,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8762),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8762),
                            Eliminado = false,
                            IdMenuAcao = 14,
                            IdPPerfil = 1
                        },
                        new
                        {
                            IdPerfilMenuAcao = 15,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8763),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8763),
                            Eliminado = false,
                            IdMenuAcao = 15,
                            IdPPerfil = 1
                        },
                        new
                        {
                            IdPerfilMenuAcao = 16,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8764),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8764),
                            Eliminado = false,
                            IdMenuAcao = 16,
                            IdPPerfil = 1
                        },
                        new
                        {
                            IdPerfilMenuAcao = 17,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8765),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8765),
                            Eliminado = false,
                            IdMenuAcao = 17,
                            IdPPerfil = 1
                        },
                        new
                        {
                            IdPerfilMenuAcao = 18,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8767),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8767),
                            Eliminado = false,
                            IdMenuAcao = 18,
                            IdPPerfil = 1
                        },
                        new
                        {
                            IdPerfilMenuAcao = 19,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8800),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 915, DateTimeKind.Local).AddTicks(8799),
                            Eliminado = false,
                            IdMenuAcao = 19,
                            IdPPerfil = 1
                        });
                });

            modelBuilder.Entity("sga_stif.Models.PeriodoQuota", b =>
                {
                    b.Property<int>("IdPeriodoQuota")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPeriodoQuota"), 1L, 1);

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<int>("CodigoPeriodo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<int>("Mes")
                        .HasColumnType("int");

                    b.Property<int>("TipoQuota")
                        .HasColumnType("int");

                    b.HasKey("IdPeriodoQuota");

                    b.ToTable("PeriodoQuota", (string)null);
                });

            modelBuilder.Entity("sga_stif.Models.QuotaSocio", b =>
                {
                    b.Property<int>("IdQuotaSocio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdQuotaSocio"), 1L, 1);

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataQueFoiConfirmadaPagamento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataQueFoiEfectuadaPagamento")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<int>("IdPeriodoQuota")
                        .HasColumnType("int");

                    b.Property<int>("IdSocio")
                        .HasColumnType("int");

                    b.Property<decimal>("Montante")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("OrigemPagamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UtilizadorQueConfirmouPagamento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UtilizadorQueEfectuouPagamento")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdQuotaSocio");

                    b.HasIndex("IdPeriodoQuota");

                    b.HasIndex("IdSocio");

                    b.ToTable("QuotaSocio", (string)null);
                });

            modelBuilder.Entity("sga_stif.Models.ResultadoStoredProcedure.ContaCorrenteIFResultado", b =>
                {
                    b.Property<string>("AgenciaNome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<string>("EstadoQuota")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstadoQuotaNum")
                        .HasColumnType("int");

                    b.Property<string>("IFS")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdQuotaSocio")
                        .HasColumnType("int");

                    b.Property<int>("IdSocio")
                        .HasColumnType("int");

                    b.Property<string>("Mes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MesNum")
                        .HasColumnType("int");

                    b.Property<decimal>("Montante")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("ContaCorrenteIFResultado");
                });

            modelBuilder.Entity("sga_stif.Models.ResultadoStoredProcedure.ContaCorrenteSocioResultado", b =>
                {
                    b.Property<string>("AgenciaNome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<string>("EstadoQuota")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstadoQuotaNum")
                        .HasColumnType("int");

                    b.Property<string>("IFS")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdQuotaSocio")
                        .HasColumnType("int");

                    b.Property<int>("IdSocio")
                        .HasColumnType("int");

                    b.Property<string>("Mes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MesNum")
                        .HasColumnType("int");

                    b.Property<decimal>("Montante")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("ContaCorrenteSocioResultado");
                });

            modelBuilder.Entity("sga_stif.Models.ResultadoStoredProcedure.ContaHistorialSocioResultado", b =>
                {
                    b.Property<string>("AgenciaNome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<string>("EstadoQuota")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IFS")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdQuotaSocio")
                        .HasColumnType("int");

                    b.Property<int>("IdSocio")
                        .HasColumnType("int");

                    b.Property<string>("Mes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MesNum")
                        .HasColumnType("int");

                    b.Property<decimal>("Montante")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroDeSocio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mesesPago")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("totalMontantePago")
                        .HasColumnType("float");

                    b.ToTable("ContaHistorialSocioResultado");
                });

            modelBuilder.Entity("sga_stif.Models.ResultadoStoredProcedure.PosicaoIFsResultado", b =>
                {
                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("IFNome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdInstituicaoFinanceira")
                        .HasColumnType("int");

                    b.Property<int>("TotalColaboradoresAnterior")
                        .HasColumnType("int");

                    b.Property<int>("TotalColaboradoresAtual")
                        .HasColumnType("int");

                    b.Property<double>("TotalQuoataMesAnterior")
                        .HasColumnType("float");

                    b.Property<double>("TotalQuoataMesAtual")
                        .HasColumnType("float");

                    b.Property<int>("TotalSocioAnterior")
                        .HasColumnType("int");

                    b.Property<int>("TotalSocioAtual")
                        .HasColumnType("int");

                    b.Property<int>("Variacao")
                        .HasColumnType("int");

                    b.ToTable("PosicaoIFsResultado");
                });

            modelBuilder.Entity("sga_stif.Models.ResultadoStoredProcedure.ProjecaoQuotasResultado", b =>
                {
                    b.Property<string>("AgenciaNome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IFS")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdSocio")
                        .HasColumnType("int");

                    b.Property<decimal>("MontanteAtual")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double>("MontanteAtualGlobal")
                        .HasColumnType("float");

                    b.Property<double>("MontanteComProjecao")
                        .HasColumnType("float");

                    b.Property<double>("MontanteComProjecaoGlobal")
                        .HasColumnType("float");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nomeIf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("ProjecaoQuotasResultado");
                });

            modelBuilder.Entity("sga_stif.Models.ResultadoStoredProcedure.RakingSocioResultado", b =>
                {
                    b.Property<string>("AgenciaNome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IFS")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MesesPago")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroDeSocio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Posicao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TopR")
                        .HasColumnType("int");

                    b.Property<double>("TotalMontantePago")
                        .HasColumnType("float");

                    b.ToTable("RakingSocioResultado");
                });

            modelBuilder.Entity("sga_stif.Models.ResultadoStoredProcedure.ReconciliacaoEntreMesesResultado", b =>
                {
                    b.Property<int>("IdInstituicaoFinanceira")
                        .HasColumnType("int");

                    b.Property<int>("IdSocio")
                        .HasColumnType("int");

                    b.Property<double?>("MontanteAnt")
                        .HasColumnType("float");

                    b.Property<double?>("MontanteAtual")
                        .HasColumnType("float");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroDeSocio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OBS")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("ReconciliacaoEntreMesesResultado");
                });

            modelBuilder.Entity("sga_stif.Models.Socio", b =>
                {
                    b.Property<int>("IdSocio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSocio"), 1L, 1);

                    b.Property<string>("Apelido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CinBi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataAtivacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataDeNascimento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstadoCivil")
                        .HasColumnType("int");

                    b.Property<int>("EstadoSocio")
                        .HasColumnType("int");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("HabilitacaoLiteraria")
                        .HasColumnType("int");

                    b.Property<int>("IdAgencia")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoQuota")
                        .HasColumnType("int");

                    b.Property<int>("IdTipologiaSocio")
                        .HasColumnType("int");

                    b.Property<string>("Nif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroColaborador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroDeSocio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroDeTelefone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroDeTelemovel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroPassaporte")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sexo")
                        .HasColumnType("int");

                    b.Property<DateTime>("ValidadeCinBi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidadePassaporte")
                        .HasColumnType("datetime2");

                    b.HasKey("IdSocio");

                    b.HasIndex("IdAgencia");

                    b.HasIndex("IdTipoQuota");

                    b.HasIndex("IdTipologiaSocio");

                    b.ToTable("Socio", (string)null);
                });

            modelBuilder.Entity("sga_stif.Models.TipologiaSocio", b =>
                {
                    b.Property<int>("IdTipologiaSocio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipologiaSocio"), 1L, 1);

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("IdTipologiaSocio");

                    b.ToTable("TipologiaSocio", (string)null);

                    b.HasData(
                        new
                        {
                            IdTipologiaSocio = 1,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 48, DateTimeKind.Local).AddTicks(9912),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 48, DateTimeKind.Local).AddTicks(9898),
                            DataFim = new DateTime(2023, 10, 2, 0, 12, 45, 48, DateTimeKind.Local).AddTicks(9917),
                            DataInicio = new DateTime(2023, 10, 2, 0, 12, 45, 48, DateTimeKind.Local).AddTicks(9917),
                            Descricao = "Normal",
                            Eliminado = false,
                            Tipo = 0
                        },
                        new
                        {
                            IdTipologiaSocio = 2,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 48, DateTimeKind.Local).AddTicks(9919),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 48, DateTimeKind.Local).AddTicks(9918),
                            DataFim = new DateTime(2023, 10, 2, 0, 12, 45, 48, DateTimeKind.Local).AddTicks(9920),
                            DataInicio = new DateTime(2023, 10, 2, 0, 12, 45, 48, DateTimeKind.Local).AddTicks(9920),
                            Descricao = "Honorário",
                            Eliminado = true,
                            Tipo = 1
                        });
                });

            modelBuilder.Entity("sga_stif.Models.TipoQuota", b =>
                {
                    b.Property<int>("IdTipoQuota")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoQuota"), 1L, 1);

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<decimal>("Montante")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Priodicidade")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("IdTipoQuota");

                    b.ToTable("TipoQuota", (string)null);

                    b.HasData(
                        new
                        {
                            IdTipoQuota = 1,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(28),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(27),
                            Descricao = "Quinzenal",
                            Eliminado = true,
                            Montante = 0m,
                            Priodicidade = 0,
                            Tipo = 1
                        },
                        new
                        {
                            IdTipoQuota = 2,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(31),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(30),
                            Descricao = "Mensal",
                            Eliminado = false,
                            Montante = 0m,
                            Priodicidade = 1,
                            Tipo = 0
                        },
                        new
                        {
                            IdTipoQuota = 3,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(33),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(32),
                            Descricao = "Trimestral",
                            Eliminado = true,
                            Montante = 0m,
                            Priodicidade = 3,
                            Tipo = 1
                        },
                        new
                        {
                            IdTipoQuota = 4,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(35),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(34),
                            Descricao = "Semestral",
                            Eliminado = true,
                            Montante = 0m,
                            Priodicidade = 6,
                            Tipo = 1
                        },
                        new
                        {
                            IdTipoQuota = 5,
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(36),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(36),
                            Descricao = "Anual",
                            Eliminado = true,
                            Montante = 0m,
                            Priodicidade = 12,
                            Tipo = 1
                        });
                });

            modelBuilder.Entity("sga_stif.Models.Utilizador", b =>
                {
                    b.Property<int>("IdUtilizador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUtilizador"), 1L, 1);

                    b.Property<string>("Apelido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("IdPerfil")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeUtilizador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PalavraPasse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUtilizador");

                    b.HasIndex("IdPerfil");

                    b.ToTable("Utilizador", (string)null);

                    b.HasData(
                        new
                        {
                            IdUtilizador = 1,
                            Apelido = "Semedo",
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(418),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 49, DateTimeKind.Local).AddTicks(418),
                            Eliminado = false,
                            Email = "asemedo@sgastif.cv",
                            IdPerfil = 1,
                            Nome = "Angelo",
                            NomeUtilizador = "asemedo",
                            PalavraPasse = "$2a$11$BcfGdIjpjnHH6jJkyRyF6eHchvEsC.T8LshB.jAohP5lZehNjHnbG"
                        },
                        new
                        {
                            IdUtilizador = 2,
                            Apelido = "Veiga",
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 191, DateTimeKind.Local).AddTicks(1031),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 191, DateTimeKind.Local).AddTicks(1025),
                            Eliminado = false,
                            Email = "oveiga@sgastif.cv",
                            IdPerfil = 1,
                            Nome = "Odailton",
                            NomeUtilizador = "oveiga",
                            PalavraPasse = "$2a$11$NbuZ7ixyb0lyQ9CUOa30V.LVq2QS56SQYcezwQkwe1M20gKv5NsW2"
                        },
                        new
                        {
                            IdUtilizador = 3,
                            Apelido = "Varela",
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 335, DateTimeKind.Local).AddTicks(7928),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 335, DateTimeKind.Local).AddTicks(7925),
                            Eliminado = false,
                            Email = "mvarela@sgastif.cv",
                            IdPerfil = 1,
                            Nome = "Manuel",
                            NomeUtilizador = "mvarela",
                            PalavraPasse = "$2a$11$ct8iAB4FUEEx2k7H7/cNp.USQdVnNuzX2FYZ4.jPIaSYbpSVSkq8."
                        },
                        new
                        {
                            IdUtilizador = 4,
                            Apelido = "Tavares",
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 484, DateTimeKind.Local).AddTicks(6550),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 484, DateTimeKind.Local).AddTicks(6546),
                            Eliminado = false,
                            Email = "jgoncalves@sgastif.cv",
                            IdPerfil = 1,
                            Nome = "Jair",
                            NomeUtilizador = "jgoncalves",
                            PalavraPasse = "$2a$11$QFfV1SXBDlZFqc/FPxKatueCydWyuBfAZ7ezdbdLC//3qqTkdghqi"
                        },
                        new
                        {
                            IdUtilizador = 5,
                            Apelido = "Teixeira",
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 631, DateTimeKind.Local).AddTicks(3622),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 631, DateTimeKind.Local).AddTicks(3615),
                            Eliminado = false,
                            Email = "jteixeira@sgastif.cv",
                            IdPerfil = 1,
                            Nome = "Jose",
                            NomeUtilizador = "jteixeira",
                            PalavraPasse = "$2a$11$TxIBEk1HmksB4OfCwUq0beALDLWRaPJpAXD5aovP458xnu9lNOAjm"
                        },
                        new
                        {
                            IdUtilizador = 6,
                            Apelido = "Trigueiros",
                            DataAtualizacao = new DateTime(2023, 10, 2, 0, 12, 45, 778, DateTimeKind.Local).AddTicks(3304),
                            DataCriacao = new DateTime(2023, 10, 2, 0, 12, 45, 778, DateTimeKind.Local).AddTicks(3300),
                            Eliminado = false,
                            Email = "jtrigueiros@sgastif.cv",
                            IdPerfil = 1,
                            Nome = "Jose",
                            NomeUtilizador = "jtrigueiros",
                            PalavraPasse = "$2a$11$SQUcMoJA1KHLumVQi2OLkOI.UypQFsMfVlI5Qw2ic5Er62QKK3DAy"
                        });
                });

            modelBuilder.Entity("sga_stif.Models.Agencia", b =>
                {
                    b.HasOne("sga_stif.Models.Cidade", "Cidade")
                        .WithMany("Agencia")
                        .HasForeignKey("IdCidade")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("sga_stif.Models.InstituicaoFinanceira", "InstituicaoFinanceira")
                        .WithMany("Agencia")
                        .HasForeignKey("IdInstituicaoFinanceira")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cidade");

                    b.Navigation("InstituicaoFinanceira");
                });

            modelBuilder.Entity("sga_stif.Models.Beneficiario", b =>
                {
                    b.HasOne("sga_stif.Models.Socio", "Socio")
                        .WithMany("Beneficiario")
                        .HasForeignKey("IdSocio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Socio");
                });

            modelBuilder.Entity("sga_stif.Models.Cidade", b =>
                {
                    b.HasOne("sga_stif.Models.Ilha", "Ilha")
                        .WithMany("Cidade")
                        .HasForeignKey("IdIlha")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ilha");
                });

            modelBuilder.Entity("sga_stif.Models.EstadoSocio", b =>
                {
                    b.HasOne("sga_stif.Models.Socio", "Socio")
                        .WithMany()
                        .HasForeignKey("IdSocio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Socio");
                });

            modelBuilder.Entity("sga_stif.Models.InstituicaoFinanceiraColaboradores", b =>
                {
                    b.HasOne("sga_stif.Models.InstituicaoFinanceira", "InstituicaoFinanceira")
                        .WithMany("InstituicaoFinanceiraColaboradores")
                        .HasForeignKey("IdInstituicaoFinanceira")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InstituicaoFinanceira");
                });

            modelBuilder.Entity("sga_stif.Models.JoiaSocio", b =>
                {
                    b.HasOne("sga_stif.Models.Joia", "Joia")
                        .WithMany("JoiaSocio")
                        .HasForeignKey("IdJoia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("sga_stif.Models.Socio", "Socio")
                        .WithMany("JoiaSocio")
                        .HasForeignKey("IdSocio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Joia");

                    b.Navigation("Socio");
                });

            modelBuilder.Entity("sga_stif.Models.MenuAcao", b =>
                {
                    b.HasOne("sga_stif.Models.Acao", "Acao")
                        .WithMany("MenuAcao")
                        .HasForeignKey("IdAcao");

                    b.HasOne("sga_stif.Models.Menu", "Menu")
                        .WithMany("MenuAcao")
                        .HasForeignKey("IdMenu");

                    b.Navigation("Acao");

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("sga_stif.Models.PerfilInstituicaoFinanceira", b =>
                {
                    b.HasOne("sga_stif.Models.Perfil", null)
                        .WithMany("PerfilInstituicaoFinanceira")
                        .HasForeignKey("PerfilIdPerfil");
                });

            modelBuilder.Entity("sga_stif.Models.PerfilMenuAcao", b =>
                {
                    b.HasOne("sga_stif.Models.MenuAcao", "MenuAcao")
                        .WithMany("PerfilMenuAcao")
                        .HasForeignKey("IdMenuAcao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("sga_stif.Models.Perfil", "Perfil")
                        .WithMany("PerfilMenuAcao")
                        .HasForeignKey("IdPPerfil")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenuAcao");

                    b.Navigation("Perfil");
                });

            modelBuilder.Entity("sga_stif.Models.QuotaSocio", b =>
                {
                    b.HasOne("sga_stif.Models.PeriodoQuota", "PeriodoQuota")
                        .WithMany("QuotaSocio")
                        .HasForeignKey("IdPeriodoQuota")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("sga_stif.Models.Socio", "Socio")
                        .WithMany("QuotaSocio")
                        .HasForeignKey("IdSocio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PeriodoQuota");

                    b.Navigation("Socio");
                });

            modelBuilder.Entity("sga_stif.Models.Socio", b =>
                {
                    b.HasOne("sga_stif.Models.Agencia", "Agencia")
                        .WithMany("Socio")
                        .HasForeignKey("IdAgencia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("sga_stif.Models.TipoQuota", "TipoQuota")
                        .WithMany("Socio")
                        .HasForeignKey("IdTipoQuota")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("sga_stif.Models.TipologiaSocio", "TipologiaSocio")
                        .WithMany("Socio")
                        .HasForeignKey("IdTipologiaSocio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agencia");

                    b.Navigation("TipoQuota");

                    b.Navigation("TipologiaSocio");
                });

            modelBuilder.Entity("sga_stif.Models.Utilizador", b =>
                {
                    b.HasOne("sga_stif.Models.Perfil", "Perfil")
                        .WithMany("Utilizador")
                        .HasForeignKey("IdPerfil");

                    b.Navigation("Perfil");
                });

            modelBuilder.Entity("sga_stif.Models.Acao", b =>
                {
                    b.Navigation("MenuAcao");
                });

            modelBuilder.Entity("sga_stif.Models.Agencia", b =>
                {
                    b.Navigation("Socio");
                });

            modelBuilder.Entity("sga_stif.Models.Cidade", b =>
                {
                    b.Navigation("Agencia");
                });

            modelBuilder.Entity("sga_stif.Models.Ilha", b =>
                {
                    b.Navigation("Cidade");
                });

            modelBuilder.Entity("sga_stif.Models.InstituicaoFinanceira", b =>
                {
                    b.Navigation("Agencia");

                    b.Navigation("InstituicaoFinanceiraColaboradores");
                });

            modelBuilder.Entity("sga_stif.Models.Joia", b =>
                {
                    b.Navigation("JoiaSocio");
                });

            modelBuilder.Entity("sga_stif.Models.Menu", b =>
                {
                    b.Navigation("MenuAcao");
                });

            modelBuilder.Entity("sga_stif.Models.MenuAcao", b =>
                {
                    b.Navigation("PerfilMenuAcao");
                });

            modelBuilder.Entity("sga_stif.Models.Perfil", b =>
                {
                    b.Navigation("PerfilInstituicaoFinanceira");

                    b.Navigation("PerfilMenuAcao");

                    b.Navigation("Utilizador");
                });

            modelBuilder.Entity("sga_stif.Models.PeriodoQuota", b =>
                {
                    b.Navigation("QuotaSocio");
                });

            modelBuilder.Entity("sga_stif.Models.Socio", b =>
                {
                    b.Navigation("Beneficiario");

                    b.Navigation("JoiaSocio");

                    b.Navigation("QuotaSocio");
                });

            modelBuilder.Entity("sga_stif.Models.TipologiaSocio", b =>
                {
                    b.Navigation("Socio");
                });

            modelBuilder.Entity("sga_stif.Models.TipoQuota", b =>
                {
                    b.Navigation("Socio");
                });
#pragma warning restore 612, 618
        }
    }
}
