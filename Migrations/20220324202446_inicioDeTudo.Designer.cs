// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using sga_stif.Models;

#nullable disable

namespace sga_stif.Migrations
{
    [DbContext(typeof(ContextoBaseDados))]
    [Migration("20220324202446_inicioDeTudo")]
    partial class inicioDeTudo
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.3");

            modelBuilder.Entity("sga_stif.Models.Acao", b =>
                {
                    b.Property<int>("IdAcao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdAcao");

                    b.ToTable("Acao", (string)null);

                    b.HasData(
                        new
                        {
                            IdAcao = 1,
                            DataAtualizacao = new DateTime(2022, 3, 24, 19, 24, 46, 558, DateTimeKind.Local).AddTicks(1880),
                            DataCriacao = new DateTime(2022, 3, 24, 19, 24, 46, 558, DateTimeKind.Local).AddTicks(1850),
                            Eliminado = false,
                            Nome = "Criar"
                        },
                        new
                        {
                            IdAcao = 2,
                            DataAtualizacao = new DateTime(2022, 3, 24, 19, 24, 46, 558, DateTimeKind.Local).AddTicks(1890),
                            DataCriacao = new DateTime(2022, 3, 24, 19, 24, 46, 558, DateTimeKind.Local).AddTicks(1890),
                            Eliminado = false,
                            Nome = "Editar"
                        },
                        new
                        {
                            IdAcao = 3,
                            DataAtualizacao = new DateTime(2022, 3, 24, 19, 24, 46, 558, DateTimeKind.Local).AddTicks(1890),
                            DataCriacao = new DateTime(2022, 3, 24, 19, 24, 46, 558, DateTimeKind.Local).AddTicks(1890),
                            Eliminado = false,
                            Nome = "Eliminar"
                        });
                });

            modelBuilder.Entity("sga_stif.Models.Agencia", b =>
                {
                    b.Property<int>("IdAgencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdCidade")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdInstituicaoFinanceira")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdAgencia");

                    b.HasIndex("IdCidade");

                    b.HasIndex("IdInstituicaoFinanceira");

                    b.ToTable("Agencia", (string)null);

                    b.HasData(
                        new
                        {
                            IdAgencia = 1,
                            DataAtualizacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8740),
                            DataCriacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8740),
                            Eliminado = false,
                            IdCidade = 8,
                            IdInstituicaoFinanceira = 1,
                            Nome = "BCA"
                        });
                });

            modelBuilder.Entity("sga_stif.Models.Beneficiario", b =>
                {
                    b.Property<int>("IdBeneficiario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Apelido")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CinBi")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataDeNascimento")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GrauDeParentesco")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdSocio")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nif")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NumeroPassaporte")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdBeneficiario");

                    b.HasIndex("IdSocio");

                    b.ToTable("Beneficiario", (string)null);
                });

            modelBuilder.Entity("sga_stif.Models.Cidade", b =>
                {
                    b.Property<int>("IdCidade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdIlha")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdCidade");

                    b.HasIndex("IdIlha");

                    b.ToTable("Cidade", (string)null);

                    b.HasData(
                        new
                        {
                            IdCidade = 1,
                            DataAtualizacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8580),
                            DataCriacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8580),
                            Eliminado = false,
                            IdIlha = 8,
                            Nome = "Praia"
                        },
                        new
                        {
                            IdCidade = 2,
                            DataAtualizacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8580),
                            DataCriacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8580),
                            Eliminado = false,
                            IdIlha = 8,
                            Nome = "Outro"
                        },
                        new
                        {
                            IdCidade = 3,
                            DataAtualizacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8590),
                            DataCriacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8590),
                            Eliminado = false,
                            IdIlha = 2,
                            Nome = "Mindelo"
                        },
                        new
                        {
                            IdCidade = 4,
                            DataAtualizacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8590),
                            DataCriacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8590),
                            Eliminado = false,
                            IdIlha = 5,
                            Nome = "Santa Maria"
                        },
                        new
                        {
                            IdCidade = 5,
                            DataAtualizacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8600),
                            DataCriacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8600),
                            Eliminado = false,
                            IdIlha = 7,
                            Nome = "Vila do Maio"
                        },
                        new
                        {
                            IdCidade = 6,
                            DataAtualizacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8600),
                            DataCriacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8600),
                            Eliminado = false,
                            IdIlha = 8,
                            Nome = "Santa Cruz"
                        },
                        new
                        {
                            IdCidade = 7,
                            DataAtualizacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8600),
                            DataCriacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8600),
                            Eliminado = false,
                            IdIlha = 6,
                            Nome = "Sal Rei"
                        },
                        new
                        {
                            IdCidade = 8,
                            DataAtualizacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8610),
                            DataCriacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8610),
                            Eliminado = false,
                            IdIlha = 1,
                            Nome = "Porto Novo"
                        },
                        new
                        {
                            IdCidade = 9,
                            DataAtualizacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8610),
                            DataCriacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8610),
                            Eliminado = false,
                            IdIlha = 8,
                            Nome = "Ribeira Grande"
                        },
                        new
                        {
                            IdCidade = 10,
                            DataAtualizacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8620),
                            DataCriacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8610),
                            Eliminado = false,
                            IdIlha = 10,
                            Nome = "Ribeira Brava"
                        },
                        new
                        {
                            IdCidade = 11,
                            DataAtualizacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8620),
                            DataCriacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8620),
                            Eliminado = false,
                            IdIlha = 1,
                            Nome = "Tarrafal"
                        },
                        new
                        {
                            IdCidade = 12,
                            DataAtualizacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8620),
                            DataCriacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8620),
                            Eliminado = false,
                            IdIlha = 5,
                            Nome = "Espargos"
                        },
                        new
                        {
                            IdCidade = 13,
                            DataAtualizacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8630),
                            DataCriacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8620),
                            Eliminado = false,
                            IdIlha = 8,
                            Nome = "Assomada"
                        },
                        new
                        {
                            IdCidade = 14,
                            DataAtualizacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8630),
                            DataCriacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8630),
                            Eliminado = false,
                            IdIlha = 8,
                            Nome = "São Domingos"
                        },
                        new
                        {
                            IdCidade = 15,
                            DataAtualizacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8630),
                            DataCriacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8630),
                            Eliminado = false,
                            IdIlha = 9,
                            Nome = "São Filipe"
                        },
                        new
                        {
                            IdCidade = 16,
                            DataAtualizacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8640),
                            DataCriacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8640),
                            Eliminado = false,
                            IdIlha = 9,
                            Nome = "Mosteiros"
                        },
                        new
                        {
                            IdCidade = 17,
                            DataAtualizacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8640),
                            DataCriacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8640),
                            Eliminado = false,
                            IdIlha = 1,
                            Nome = "Nova Sintra"
                        },
                        new
                        {
                            IdCidade = 18,
                            DataAtualizacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8640),
                            DataCriacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8640),
                            Eliminado = false,
                            IdIlha = 8,
                            Nome = "Tarrafal (Santiano)"
                        });
                });

            modelBuilder.Entity("sga_stif.Models.EstadoSocio", b =>
                {
                    b.Property<int>("IdEstadoSocio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("TEXT");

                    b.Property<int>("Estado")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdSocio")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdEstadoSocio");

                    b.HasIndex("IdSocio");

                    b.ToTable("EstadoSocio", (string)null);
                });

            modelBuilder.Entity("sga_stif.Models.Ilha", b =>
                {
                    b.Property<int>("IdIlha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdIlha");

                    b.ToTable("Ilha", (string)null);

                    b.HasData(
                        new
                        {
                            IdIlha = 1,
                            DataAtualizacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8520),
                            DataCriacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8520),
                            Eliminado = false,
                            Nome = "Santo Antão"
                        },
                        new
                        {
                            IdIlha = 2,
                            DataAtualizacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8520),
                            DataCriacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8520),
                            Eliminado = false,
                            Nome = "São Vicente"
                        },
                        new
                        {
                            IdIlha = 3,
                            DataAtualizacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8530),
                            DataCriacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8530),
                            Eliminado = false,
                            Nome = "Santa Luzia"
                        },
                        new
                        {
                            IdIlha = 4,
                            DataAtualizacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8530),
                            DataCriacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8530),
                            Eliminado = false,
                            Nome = "São Nicolau"
                        },
                        new
                        {
                            IdIlha = 5,
                            DataAtualizacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8530),
                            DataCriacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8530),
                            Eliminado = false,
                            Nome = "Sal"
                        },
                        new
                        {
                            IdIlha = 6,
                            DataAtualizacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8540),
                            DataCriacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8540),
                            Eliminado = false,
                            Nome = "Boavista"
                        },
                        new
                        {
                            IdIlha = 7,
                            DataAtualizacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8540),
                            DataCriacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8540),
                            Eliminado = false,
                            Nome = "Maio"
                        },
                        new
                        {
                            IdIlha = 8,
                            DataAtualizacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8540),
                            DataCriacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8540),
                            Eliminado = false,
                            Nome = "Santiago"
                        },
                        new
                        {
                            IdIlha = 9,
                            DataAtualizacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8550),
                            DataCriacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8550),
                            Eliminado = false,
                            Nome = "Fogo"
                        },
                        new
                        {
                            IdIlha = 10,
                            DataAtualizacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8550),
                            DataCriacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8550),
                            Eliminado = false,
                            Nome = "Brava"
                        });
                });

            modelBuilder.Entity("sga_stif.Models.InstituicaoFinanceira", b =>
                {
                    b.Property<int>("IdInstituicaoFinanceira")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdInstituicaoFinanceira");

                    b.ToTable("InstituicaoFinanceira", (string)null);

                    b.HasData(
                        new
                        {
                            IdInstituicaoFinanceira = 1,
                            DataAtualizacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8700),
                            DataCriacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8700),
                            Eliminado = false,
                            Nome = "BCA"
                        });
                });

            modelBuilder.Entity("sga_stif.Models.Joia", b =>
                {
                    b.Property<int>("IdJoia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Montante")
                        .HasColumnType("TEXT");

                    b.HasKey("IdJoia");

                    b.ToTable("Joia", (string)null);
                });

            modelBuilder.Entity("sga_stif.Models.JoiaSocio", b =>
                {
                    b.Property<int>("IdJoiaSocio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdJoia")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdSocio")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Montante")
                        .HasColumnType("TEXT");

                    b.HasKey("IdJoiaSocio");

                    b.HasIndex("IdJoia");

                    b.HasIndex("IdSocio");

                    b.ToTable("JoiaSocio", (string)null);
                });

            modelBuilder.Entity("sga_stif.Models.Menu", b =>
                {
                    b.Property<int>("IdMenu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IdMenuPai")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdMenu");

                    b.ToTable("Menu", (string)null);

                    b.HasData(
                        new
                        {
                            IdMenu = 1,
                            DataAtualizacao = new DateTime(2022, 3, 24, 19, 24, 46, 558, DateTimeKind.Local).AddTicks(1940),
                            DataCriacao = new DateTime(2022, 3, 24, 19, 24, 46, 558, DateTimeKind.Local).AddTicks(1940),
                            Descricao = "Administração do Sistema SGA-STIF",
                            Eliminado = false,
                            Nome = "Administração"
                        },
                        new
                        {
                            IdMenu = 2,
                            DataAtualizacao = new DateTime(2022, 3, 24, 19, 24, 46, 558, DateTimeKind.Local).AddTicks(1940),
                            DataCriacao = new DateTime(2022, 3, 24, 19, 24, 46, 558, DateTimeKind.Local).AddTicks(1940),
                            Descricao = "Gestão dos utilizadores",
                            Eliminado = false,
                            IdMenuPai = 1,
                            Nome = "Utilizador"
                        },
                        new
                        {
                            IdMenu = 3,
                            DataAtualizacao = new DateTime(2022, 3, 24, 19, 24, 46, 558, DateTimeKind.Local).AddTicks(1950),
                            DataCriacao = new DateTime(2022, 3, 24, 19, 24, 46, 558, DateTimeKind.Local).AddTicks(1940),
                            Descricao = "Gestão dos utilizadores",
                            Eliminado = false,
                            IdMenuPai = 1,
                            Nome = "Perfil"
                        },
                        new
                        {
                            IdMenu = 4,
                            DataAtualizacao = new DateTime(2022, 3, 24, 19, 24, 46, 558, DateTimeKind.Local).AddTicks(1950),
                            DataCriacao = new DateTime(2022, 3, 24, 19, 24, 46, 558, DateTimeKind.Local).AddTicks(1950),
                            Descricao = "Gestão dos utilizadores",
                            Eliminado = false,
                            IdMenuPai = 1,
                            Nome = "Menu"
                        });
                });

            modelBuilder.Entity("sga_stif.Models.MenuAcao", b =>
                {
                    b.Property<int>("IdMenuAcao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IdAcao")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IdMenu")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdMenuAcao");

                    b.HasIndex("IdAcao");

                    b.HasIndex("IdMenu");

                    b.ToTable("MenuAcao", (string)null);
                });

            modelBuilder.Entity("sga_stif.Models.Perfil", b =>
                {
                    b.Property<int>("IdPerfil")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdPerfil");

                    b.ToTable("Perfil", (string)null);

                    b.HasData(
                        new
                        {
                            IdPerfil = 1,
                            DataAtualizacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8680),
                            DataCriacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8680),
                            Descricao = "Administrador",
                            Eliminado = false
                        },
                        new
                        {
                            IdPerfil = 2,
                            DataAtualizacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8680),
                            DataCriacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8680),
                            Descricao = "Operador",
                            Eliminado = false
                        });
                });

            modelBuilder.Entity("sga_stif.Models.PerfilMenuAcao", b =>
                {
                    b.Property<int>("IdPerfilMenuAcao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdMenuAcao")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdPPerfil")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdPerfilMenuAcao");

                    b.HasIndex("IdMenuAcao");

                    b.HasIndex("IdPPerfil");

                    b.ToTable("PerfilMenuAcao", (string)null);
                });

            modelBuilder.Entity("sga_stif.Models.PeriodoQuota", b =>
                {
                    b.Property<int>("IdPeriodoQuota")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Ano")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Estado")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Mes")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdPeriodoQuota");

                    b.ToTable("PeriodoQuota", (string)null);
                });

            modelBuilder.Entity("sga_stif.Models.QuotaSocio", b =>
                {
                    b.Property<int>("IdQuotaSocio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Estado")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdPeriodoQuota")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdSocio")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Montante")
                        .HasColumnType("TEXT");

                    b.HasKey("IdQuotaSocio");

                    b.HasIndex("IdPeriodoQuota");

                    b.HasIndex("IdSocio");

                    b.ToTable("QuotaSocio");
                });

            modelBuilder.Entity("sga_stif.Models.Socio", b =>
                {
                    b.Property<int>("IdSocio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Apelido")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CinBi")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataDeNascimento")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("BLOB");

                    b.Property<int>("IdAgencia")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdTipoQuota")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdTipologiaSocio")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nif")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NumeroDeTelefone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NumeroPassaporte")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Sexo")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdSocio");

                    b.HasIndex("IdAgencia");

                    b.HasIndex("IdTipoQuota");

                    b.HasIndex("IdTipologiaSocio");

                    b.ToTable("Socio", (string)null);
                });

            modelBuilder.Entity("sga_stif.Models.TipologiaSocio", b =>
                {
                    b.Property<int>("IdTipologiaSocio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Montante")
                        .HasColumnType("TEXT");

                    b.Property<int>("Prioridicidade")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Tipo")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdTipologiaSocio");

                    b.ToTable("TipologiaSocio", (string)null);

                    b.HasData(
                        new
                        {
                            IdTipologiaSocio = 1,
                            DataAtualizacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8220),
                            DataCriacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8180),
                            DataFim = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8230),
                            DataInicio = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8230),
                            Descricao = "Normal",
                            Eliminado = false,
                            Montante = 0m,
                            Prioridicidade = 1,
                            Tipo = 0
                        },
                        new
                        {
                            IdTipologiaSocio = 2,
                            DataAtualizacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8240),
                            DataCriacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8240),
                            DataFim = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8240),
                            DataInicio = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8240),
                            Descricao = "Honorário",
                            Eliminado = false,
                            Montante = 0m,
                            Prioridicidade = 1,
                            Tipo = 1
                        });
                });

            modelBuilder.Entity("sga_stif.Models.TipoQuota", b =>
                {
                    b.Property<int>("IdTipoQuota")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Montante")
                        .HasColumnType("TEXT");

                    b.Property<int>("Priodicidade")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Tipo")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdTipoQuota");

                    b.ToTable("TipoQuota", (string)null);

                    b.HasData(
                        new
                        {
                            IdTipoQuota = 1,
                            DataAtualizacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8430),
                            DataCriacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8420),
                            Descricao = "Quinzenal",
                            Eliminado = false,
                            Montante = 0m,
                            Priodicidade = 1,
                            Tipo = 0
                        },
                        new
                        {
                            IdTipoQuota = 2,
                            DataAtualizacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8440),
                            DataCriacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8430),
                            Descricao = "Mensal",
                            Eliminado = false,
                            Montante = 0m,
                            Priodicidade = 1,
                            Tipo = 0
                        },
                        new
                        {
                            IdTipoQuota = 3,
                            DataAtualizacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8480),
                            DataCriacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8470),
                            Descricao = "Trimestral",
                            Eliminado = false,
                            Montante = 0m,
                            Priodicidade = 1,
                            Tipo = 0
                        },
                        new
                        {
                            IdTipoQuota = 4,
                            DataAtualizacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8480),
                            DataCriacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8480),
                            Descricao = "Semestral",
                            Eliminado = false,
                            Montante = 0m,
                            Priodicidade = 1,
                            Tipo = 0
                        },
                        new
                        {
                            IdTipoQuota = 5,
                            DataAtualizacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8490),
                            DataCriacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8490),
                            Descricao = "Anual",
                            Eliminado = false,
                            Montante = 0m,
                            Priodicidade = 1,
                            Tipo = 0
                        });
                });

            modelBuilder.Entity("sga_stif.Models.Utilizador", b =>
                {
                    b.Property<int>("IdUtilizador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Apelido")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("BLOB");

                    b.Property<int?>("IdPerfil")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeUtilizador")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PalavraPasse")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdUtilizador");

                    b.HasIndex("IdPerfil");

                    b.ToTable("Utilizador", (string)null);

                    b.HasData(
                        new
                        {
                            IdUtilizador = 1,
                            Apelido = "Semedo",
                            DataAtualizacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8760),
                            DataCriacao = new DateTime(2022, 3, 24, 19, 24, 45, 983, DateTimeKind.Local).AddTicks(8760),
                            Eliminado = false,
                            Email = "angelosemedo@sgastif.cv",
                            IdPerfil = 1,
                            Nome = "Angelo",
                            NomeUtilizador = "angelosemedo",
                            PalavraPasse = "$2a$11$br5lE2IOlP/P9RyIO0PYkev/jpa2xzJoW.KZLHVvJPXskzqnHHu62"
                        },
                        new
                        {
                            IdUtilizador = 2,
                            Apelido = "Veiga",
                            DataAtualizacao = new DateTime(2022, 3, 24, 19, 24, 46, 170, DateTimeKind.Local).AddTicks(30),
                            DataCriacao = new DateTime(2022, 3, 24, 19, 24, 46, 170, DateTimeKind.Local),
                            Eliminado = false,
                            Email = "odailtonveiga@sgastif.cv",
                            IdPerfil = 1,
                            Nome = "Odailton",
                            NomeUtilizador = "odailtonveiga",
                            PalavraPasse = "$2a$11$dQilmQZfGvY3PMGN4hIhsOZs1C9OLi167JpAtu1n0uFSONchSUlgC"
                        },
                        new
                        {
                            IdUtilizador = 3,
                            Apelido = "Varela",
                            DataAtualizacao = new DateTime(2022, 3, 24, 19, 24, 46, 353, DateTimeKind.Local).AddTicks(3880),
                            DataCriacao = new DateTime(2022, 3, 24, 19, 24, 46, 353, DateTimeKind.Local).AddTicks(3850),
                            Eliminado = false,
                            Email = "manuelvarela@sgastif.cv",
                            IdPerfil = 1,
                            Nome = "Manuel",
                            NomeUtilizador = "manuelvarela",
                            PalavraPasse = "$2a$11$jY3uk1RoLV0cLMVMbPT9Uut69dBjFqAKdPRiloPPsdXa2V6yNDiOq"
                        });
                });

            modelBuilder.Entity("sga_stif.Models.Agencia", b =>
                {
                    b.HasOne("sga_stif.Models.Cidade", "Cidade")
                        .WithMany("Agencia")
                        .HasForeignKey("IdCidade")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("sga_stif.Models.InstituicaoFinanceira", "InstituicaoFinanceira")
                        .WithMany("Agencia")
                        .HasForeignKey("IdInstituicaoFinanceira")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cidade");

                    b.Navigation("InstituicaoFinanceira");
                });

            modelBuilder.Entity("sga_stif.Models.Beneficiario", b =>
                {
                    b.HasOne("sga_stif.Models.Socio", "Socio")
                        .WithMany("Beneficiario")
                        .HasForeignKey("IdSocio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Socio");
                });

            modelBuilder.Entity("sga_stif.Models.Cidade", b =>
                {
                    b.HasOne("sga_stif.Models.Ilha", "Ilha")
                        .WithMany("Cidade")
                        .HasForeignKey("IdIlha")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ilha");
                });

            modelBuilder.Entity("sga_stif.Models.EstadoSocio", b =>
                {
                    b.HasOne("sga_stif.Models.Socio", "Socio")
                        .WithMany()
                        .HasForeignKey("IdSocio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Socio");
                });

            modelBuilder.Entity("sga_stif.Models.JoiaSocio", b =>
                {
                    b.HasOne("sga_stif.Models.Joia", "Joia")
                        .WithMany("JoiaSocio")
                        .HasForeignKey("IdJoia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("sga_stif.Models.Socio", "Socio")
                        .WithMany("JoiaSocio")
                        .HasForeignKey("IdSocio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Joia");

                    b.Navigation("Socio");
                });

            modelBuilder.Entity("sga_stif.Models.MenuAcao", b =>
                {
                    b.HasOne("sga_stif.Models.Acao", "Acao")
                        .WithMany("MenuAcao")
                        .HasForeignKey("IdAcao");

                    b.HasOne("sga_stif.Models.Menu", "Menu")
                        .WithMany("MenuAcao")
                        .HasForeignKey("IdMenu");

                    b.Navigation("Acao");

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("sga_stif.Models.PerfilMenuAcao", b =>
                {
                    b.HasOne("sga_stif.Models.MenuAcao", "MenuAcao")
                        .WithMany("PerfilMenuAcao")
                        .HasForeignKey("IdMenuAcao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("sga_stif.Models.Perfil", "Perfil")
                        .WithMany("PerfilMenuAcao")
                        .HasForeignKey("IdPPerfil")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenuAcao");

                    b.Navigation("Perfil");
                });

            modelBuilder.Entity("sga_stif.Models.QuotaSocio", b =>
                {
                    b.HasOne("sga_stif.Models.PeriodoQuota", "PeriodoQuota")
                        .WithMany("QuotaSocio")
                        .HasForeignKey("IdPeriodoQuota")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("sga_stif.Models.Socio", "Socio")
                        .WithMany("QuotaSocio")
                        .HasForeignKey("IdSocio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PeriodoQuota");

                    b.Navigation("Socio");
                });

            modelBuilder.Entity("sga_stif.Models.Socio", b =>
                {
                    b.HasOne("sga_stif.Models.Agencia", "Agencia")
                        .WithMany("Socio")
                        .HasForeignKey("IdAgencia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("sga_stif.Models.TipoQuota", "TipoQuota")
                        .WithMany("Socio")
                        .HasForeignKey("IdTipoQuota")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("sga_stif.Models.TipologiaSocio", "TipologiaSocio")
                        .WithMany("Socio")
                        .HasForeignKey("IdTipologiaSocio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agencia");

                    b.Navigation("TipoQuota");

                    b.Navigation("TipologiaSocio");
                });

            modelBuilder.Entity("sga_stif.Models.Utilizador", b =>
                {
                    b.HasOne("sga_stif.Models.Perfil", "Perfil")
                        .WithMany("Utilizador")
                        .HasForeignKey("IdPerfil");

                    b.Navigation("Perfil");
                });

            modelBuilder.Entity("sga_stif.Models.Acao", b =>
                {
                    b.Navigation("MenuAcao");
                });

            modelBuilder.Entity("sga_stif.Models.Agencia", b =>
                {
                    b.Navigation("Socio");
                });

            modelBuilder.Entity("sga_stif.Models.Cidade", b =>
                {
                    b.Navigation("Agencia");
                });

            modelBuilder.Entity("sga_stif.Models.Ilha", b =>
                {
                    b.Navigation("Cidade");
                });

            modelBuilder.Entity("sga_stif.Models.InstituicaoFinanceira", b =>
                {
                    b.Navigation("Agencia");
                });

            modelBuilder.Entity("sga_stif.Models.Joia", b =>
                {
                    b.Navigation("JoiaSocio");
                });

            modelBuilder.Entity("sga_stif.Models.Menu", b =>
                {
                    b.Navigation("MenuAcao");
                });

            modelBuilder.Entity("sga_stif.Models.MenuAcao", b =>
                {
                    b.Navigation("PerfilMenuAcao");
                });

            modelBuilder.Entity("sga_stif.Models.Perfil", b =>
                {
                    b.Navigation("PerfilMenuAcao");

                    b.Navigation("Utilizador");
                });

            modelBuilder.Entity("sga_stif.Models.PeriodoQuota", b =>
                {
                    b.Navigation("QuotaSocio");
                });

            modelBuilder.Entity("sga_stif.Models.Socio", b =>
                {
                    b.Navigation("Beneficiario");

                    b.Navigation("JoiaSocio");

                    b.Navigation("QuotaSocio");
                });

            modelBuilder.Entity("sga_stif.Models.TipologiaSocio", b =>
                {
                    b.Navigation("Socio");
                });

            modelBuilder.Entity("sga_stif.Models.TipoQuota", b =>
                {
                    b.Navigation("Socio");
                });
#pragma warning restore 612, 618
        }
    }
}
