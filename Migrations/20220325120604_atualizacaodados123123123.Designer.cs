// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using sga_stif.Models;

#nullable disable

namespace sga_stif.Migrations
{
    [DbContext(typeof(ContextoBaseDados))]
    [Migration("20220325120604_atualizacaodados123123123")]
    partial class atualizacaodados123123123
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.3");

            modelBuilder.Entity("sga_stif.Models.Acao", b =>
                {
                    b.Property<int>("IdAcao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdAcao");

                    b.ToTable("Acao", (string)null);

                    b.HasData(
                        new
                        {
                            IdAcao = 1,
                            DataAtualizacao = new DateTime(2022, 3, 25, 11, 6, 2, 916, DateTimeKind.Local).AddTicks(3308),
                            DataCriacao = new DateTime(2022, 3, 25, 11, 6, 2, 916, DateTimeKind.Local).AddTicks(3301),
                            Eliminado = false,
                            Nome = "Criar"
                        },
                        new
                        {
                            IdAcao = 2,
                            DataAtualizacao = new DateTime(2022, 3, 25, 11, 6, 2, 916, DateTimeKind.Local).AddTicks(3317),
                            DataCriacao = new DateTime(2022, 3, 25, 11, 6, 2, 916, DateTimeKind.Local).AddTicks(3316),
                            Eliminado = false,
                            Nome = "Editar"
                        },
                        new
                        {
                            IdAcao = 3,
                            DataAtualizacao = new DateTime(2022, 3, 25, 11, 6, 2, 916, DateTimeKind.Local).AddTicks(3319),
                            DataCriacao = new DateTime(2022, 3, 25, 11, 6, 2, 916, DateTimeKind.Local).AddTicks(3318),
                            Eliminado = false,
                            Nome = "Eliminar"
                        });
                });

            modelBuilder.Entity("sga_stif.Models.Agencia", b =>
                {
                    b.Property<int>("IdAgencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdCidade")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdInstituicaoFinanceira")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdAgencia");

                    b.HasIndex("IdCidade");

                    b.HasIndex("IdInstituicaoFinanceira");

                    b.ToTable("Agencia", (string)null);

                    b.HasData(
                        new
                        {
                            IdAgencia = 1,
                            DataAtualizacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(8238),
                            DataCriacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(8237),
                            Eliminado = false,
                            IdCidade = 8,
                            IdInstituicaoFinanceira = 1,
                            Nome = "BCA"
                        });
                });

            modelBuilder.Entity("sga_stif.Models.Beneficiario", b =>
                {
                    b.Property<int>("IdBeneficiario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Apelido")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CinBi")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataDeNascimento")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GrauDeParentesco")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdSocio")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nif")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NumeroPassaporte")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdBeneficiario");

                    b.HasIndex("IdSocio");

                    b.ToTable("Beneficiario", (string)null);
                });

            modelBuilder.Entity("sga_stif.Models.Cidade", b =>
                {
                    b.Property<int>("IdCidade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdIlha")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdCidade");

                    b.HasIndex("IdIlha");

                    b.ToTable("Cidade", (string)null);

                    b.HasData(
                        new
                        {
                            IdCidade = 1,
                            DataAtualizacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7936),
                            DataCriacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7935),
                            Eliminado = false,
                            IdIlha = 8,
                            Nome = "Praia"
                        },
                        new
                        {
                            IdCidade = 2,
                            DataAtualizacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7943),
                            DataCriacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7941),
                            Eliminado = false,
                            IdIlha = 8,
                            Nome = "Outro"
                        },
                        new
                        {
                            IdCidade = 3,
                            DataAtualizacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7947),
                            DataCriacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7946),
                            Eliminado = false,
                            IdIlha = 2,
                            Nome = "Mindelo"
                        },
                        new
                        {
                            IdCidade = 4,
                            DataAtualizacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7950),
                            DataCriacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7949),
                            Eliminado = false,
                            IdIlha = 5,
                            Nome = "Santa Maria"
                        },
                        new
                        {
                            IdCidade = 5,
                            DataAtualizacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7954),
                            DataCriacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7952),
                            Eliminado = false,
                            IdIlha = 7,
                            Nome = "Vila do Maio"
                        },
                        new
                        {
                            IdCidade = 6,
                            DataAtualizacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7957),
                            DataCriacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7956),
                            Eliminado = false,
                            IdIlha = 8,
                            Nome = "Santa Cruz"
                        },
                        new
                        {
                            IdCidade = 7,
                            DataAtualizacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7960),
                            DataCriacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7959),
                            Eliminado = false,
                            IdIlha = 6,
                            Nome = "Sal Rei"
                        },
                        new
                        {
                            IdCidade = 8,
                            DataAtualizacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7964),
                            DataCriacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7963),
                            Eliminado = false,
                            IdIlha = 1,
                            Nome = "Porto Novo"
                        },
                        new
                        {
                            IdCidade = 9,
                            DataAtualizacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7967),
                            DataCriacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7966),
                            Eliminado = false,
                            IdIlha = 8,
                            Nome = "Ribeira Grande"
                        },
                        new
                        {
                            IdCidade = 10,
                            DataAtualizacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7971),
                            DataCriacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7970),
                            Eliminado = false,
                            IdIlha = 10,
                            Nome = "Ribeira Brava"
                        },
                        new
                        {
                            IdCidade = 11,
                            DataAtualizacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7974),
                            DataCriacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7973),
                            Eliminado = false,
                            IdIlha = 1,
                            Nome = "Tarrafal"
                        },
                        new
                        {
                            IdCidade = 12,
                            DataAtualizacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7977),
                            DataCriacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7976),
                            Eliminado = false,
                            IdIlha = 5,
                            Nome = "Espargos"
                        },
                        new
                        {
                            IdCidade = 13,
                            DataAtualizacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7981),
                            DataCriacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7980),
                            Eliminado = false,
                            IdIlha = 8,
                            Nome = "Assomada"
                        },
                        new
                        {
                            IdCidade = 14,
                            DataAtualizacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7984),
                            DataCriacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7983),
                            Eliminado = false,
                            IdIlha = 8,
                            Nome = "São Domingos"
                        },
                        new
                        {
                            IdCidade = 15,
                            DataAtualizacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(8077),
                            DataCriacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(8076),
                            Eliminado = false,
                            IdIlha = 9,
                            Nome = "São Filipe"
                        },
                        new
                        {
                            IdCidade = 16,
                            DataAtualizacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(8081),
                            DataCriacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(8080),
                            Eliminado = false,
                            IdIlha = 9,
                            Nome = "Mosteiros"
                        },
                        new
                        {
                            IdCidade = 17,
                            DataAtualizacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(8085),
                            DataCriacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(8084),
                            Eliminado = false,
                            IdIlha = 1,
                            Nome = "Nova Sintra"
                        },
                        new
                        {
                            IdCidade = 18,
                            DataAtualizacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(8089),
                            DataCriacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(8088),
                            Eliminado = false,
                            IdIlha = 8,
                            Nome = "Tarrafal (Santiano)"
                        });
                });

            modelBuilder.Entity("sga_stif.Models.EstadoSocio", b =>
                {
                    b.Property<int>("IdEstadoSocio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("TEXT");

                    b.Property<int>("Estado")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdSocio")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdEstadoSocio");

                    b.HasIndex("IdSocio");

                    b.ToTable("EstadoSocio", (string)null);
                });

            modelBuilder.Entity("sga_stif.Models.Ilha", b =>
                {
                    b.Property<int>("IdIlha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdIlha");

                    b.ToTable("Ilha", (string)null);

                    b.HasData(
                        new
                        {
                            IdIlha = 1,
                            DataAtualizacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7867),
                            DataCriacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7865),
                            Eliminado = false,
                            Nome = "Santo Antão"
                        },
                        new
                        {
                            IdIlha = 2,
                            DataAtualizacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7872),
                            DataCriacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7871),
                            Eliminado = false,
                            Nome = "São Vicente"
                        },
                        new
                        {
                            IdIlha = 3,
                            DataAtualizacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7876),
                            DataCriacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7875),
                            Eliminado = false,
                            Nome = "Santa Luzia"
                        },
                        new
                        {
                            IdIlha = 4,
                            DataAtualizacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7879),
                            DataCriacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7878),
                            Eliminado = false,
                            Nome = "São Nicolau"
                        },
                        new
                        {
                            IdIlha = 5,
                            DataAtualizacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7882),
                            DataCriacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7881),
                            Eliminado = false,
                            Nome = "Sal"
                        },
                        new
                        {
                            IdIlha = 6,
                            DataAtualizacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7886),
                            DataCriacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7885),
                            Eliminado = false,
                            Nome = "Boavista"
                        },
                        new
                        {
                            IdIlha = 7,
                            DataAtualizacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7889),
                            DataCriacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7888),
                            Eliminado = false,
                            Nome = "Maio"
                        },
                        new
                        {
                            IdIlha = 8,
                            DataAtualizacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7892),
                            DataCriacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7891),
                            Eliminado = false,
                            Nome = "Santiago"
                        },
                        new
                        {
                            IdIlha = 9,
                            DataAtualizacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7895),
                            DataCriacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7894),
                            Eliminado = false,
                            Nome = "Fogo"
                        },
                        new
                        {
                            IdIlha = 10,
                            DataAtualizacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7898),
                            DataCriacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7897),
                            Eliminado = false,
                            Nome = "Brava"
                        });
                });

            modelBuilder.Entity("sga_stif.Models.InstituicaoFinanceira", b =>
                {
                    b.Property<int>("IdInstituicaoFinanceira")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdInstituicaoFinanceira");

                    b.ToTable("InstituicaoFinanceira", (string)null);

                    b.HasData(
                        new
                        {
                            IdInstituicaoFinanceira = 2,
                            DataAtualizacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(8180),
                            DataCriacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(8179),
                            Eliminado = false,
                            Nome = "Caixa Económica de Cabo Verde"
                        },
                        new
                        {
                            IdInstituicaoFinanceira = 3,
                            DataAtualizacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(8185),
                            DataCriacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(8184),
                            Eliminado = false,
                            Nome = "Banco Comercial do Atlântico"
                        },
                        new
                        {
                            IdInstituicaoFinanceira = 4,
                            DataAtualizacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(8189),
                            DataCriacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(8188),
                            Eliminado = false,
                            Nome = "Banco Caboverdiano de Negócios"
                        },
                        new
                        {
                            IdInstituicaoFinanceira = 5,
                            DataAtualizacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(8192),
                            DataCriacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(8191),
                            Eliminado = false,
                            Nome = "Banco Interatlântico"
                        },
                        new
                        {
                            IdInstituicaoFinanceira = 8,
                            DataAtualizacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(8195),
                            DataCriacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(8194),
                            Eliminado = false,
                            Nome = "Banco Angolano de Investimentos"
                        },
                        new
                        {
                            IdInstituicaoFinanceira = 9,
                            DataAtualizacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(8199),
                            DataCriacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(8198),
                            Eliminado = false,
                            Nome = "International Investment Bank"
                        },
                        new
                        {
                            IdInstituicaoFinanceira = 11,
                            DataAtualizacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(8202),
                            DataCriacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(8201),
                            Eliminado = false,
                            Nome = "Ecobank Cabo Verde SA"
                        });
                });

            modelBuilder.Entity("sga_stif.Models.Joia", b =>
                {
                    b.Property<int>("IdJoia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Montante")
                        .HasColumnType("TEXT");

                    b.HasKey("IdJoia");

                    b.ToTable("Joia", (string)null);
                });

            modelBuilder.Entity("sga_stif.Models.JoiaSocio", b =>
                {
                    b.Property<int>("IdJoiaSocio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdJoia")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdSocio")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Montante")
                        .HasColumnType("TEXT");

                    b.HasKey("IdJoiaSocio");

                    b.HasIndex("IdJoia");

                    b.HasIndex("IdSocio");

                    b.ToTable("JoiaSocio", (string)null);
                });

            modelBuilder.Entity("sga_stif.Models.Menu", b =>
                {
                    b.Property<int>("IdMenu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IdMenuPai")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdMenu");

                    b.ToTable("Menu", (string)null);

                    b.HasData(
                        new
                        {
                            IdMenu = 1,
                            DataAtualizacao = new DateTime(2022, 3, 25, 11, 6, 2, 916, DateTimeKind.Local).AddTicks(3378),
                            DataCriacao = new DateTime(2022, 3, 25, 11, 6, 2, 916, DateTimeKind.Local).AddTicks(3378),
                            Descricao = "Administração do Sistema SGA-STIF",
                            Eliminado = false,
                            Nome = "Administração"
                        },
                        new
                        {
                            IdMenu = 2,
                            DataAtualizacao = new DateTime(2022, 3, 25, 11, 6, 2, 916, DateTimeKind.Local).AddTicks(3383),
                            DataCriacao = new DateTime(2022, 3, 25, 11, 6, 2, 916, DateTimeKind.Local).AddTicks(3382),
                            Descricao = "Gestão dos utilizadores",
                            Eliminado = false,
                            IdMenuPai = 1,
                            Nome = "Utilizador"
                        },
                        new
                        {
                            IdMenu = 3,
                            DataAtualizacao = new DateTime(2022, 3, 25, 11, 6, 2, 916, DateTimeKind.Local).AddTicks(3386),
                            DataCriacao = new DateTime(2022, 3, 25, 11, 6, 2, 916, DateTimeKind.Local).AddTicks(3385),
                            Descricao = "Gestão dos utilizadores",
                            Eliminado = false,
                            IdMenuPai = 1,
                            Nome = "Perfil"
                        },
                        new
                        {
                            IdMenu = 4,
                            DataAtualizacao = new DateTime(2022, 3, 25, 11, 6, 2, 916, DateTimeKind.Local).AddTicks(3389),
                            DataCriacao = new DateTime(2022, 3, 25, 11, 6, 2, 916, DateTimeKind.Local).AddTicks(3388),
                            Descricao = "Gestão dos utilizadores",
                            Eliminado = false,
                            IdMenuPai = 1,
                            Nome = "Menu"
                        });
                });

            modelBuilder.Entity("sga_stif.Models.MenuAcao", b =>
                {
                    b.Property<int>("IdMenuAcao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IdAcao")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IdMenu")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdMenuAcao");

                    b.HasIndex("IdAcao");

                    b.HasIndex("IdMenu");

                    b.ToTable("MenuAcao", (string)null);
                });

            modelBuilder.Entity("sga_stif.Models.Perfil", b =>
                {
                    b.Property<int>("IdPerfil")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdPerfil");

                    b.ToTable("Perfil", (string)null);

                    b.HasData(
                        new
                        {
                            IdPerfil = 1,
                            DataAtualizacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(8142),
                            DataCriacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(8140),
                            Descricao = "Administrador",
                            Eliminado = false
                        },
                        new
                        {
                            IdPerfil = 2,
                            DataAtualizacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(8148),
                            DataCriacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(8147),
                            Descricao = "Operador",
                            Eliminado = false
                        });
                });

            modelBuilder.Entity("sga_stif.Models.PerfilMenuAcao", b =>
                {
                    b.Property<int>("IdPerfilMenuAcao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdMenuAcao")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdPPerfil")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdPerfilMenuAcao");

                    b.HasIndex("IdMenuAcao");

                    b.HasIndex("IdPPerfil");

                    b.ToTable("PerfilMenuAcao", (string)null);
                });

            modelBuilder.Entity("sga_stif.Models.PeriodoQuota", b =>
                {
                    b.Property<int>("IdPeriodoQuota")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Ano")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Estado")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Mes")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdPeriodoQuota");

                    b.ToTable("PeriodoQuota", (string)null);
                });

            modelBuilder.Entity("sga_stif.Models.QuotaSocio", b =>
                {
                    b.Property<int>("IdQuotaSocio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Estado")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdPeriodoQuota")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdSocio")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Montante")
                        .HasColumnType("TEXT");

                    b.HasKey("IdQuotaSocio");

                    b.HasIndex("IdPeriodoQuota");

                    b.HasIndex("IdSocio");

                    b.ToTable("QuotaSocio");
                });

            modelBuilder.Entity("sga_stif.Models.Socio", b =>
                {
                    b.Property<int>("IdSocio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Apelido")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CinBi")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataDeNascimento")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("BLOB");

                    b.Property<int>("IdAgencia")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdTipoQuota")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdTipologiaSocio")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nif")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NumeroDeTelefone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NumeroPassaporte")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Sexo")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdSocio");

                    b.HasIndex("IdAgencia");

                    b.HasIndex("IdTipoQuota");

                    b.HasIndex("IdTipologiaSocio");

                    b.ToTable("Socio", (string)null);
                });

            modelBuilder.Entity("sga_stif.Models.TipologiaSocio", b =>
                {
                    b.Property<int>("IdTipologiaSocio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Montante")
                        .HasColumnType("TEXT");

                    b.Property<int>("Prioridicidade")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Tipo")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdTipologiaSocio");

                    b.ToTable("TipologiaSocio", (string)null);

                    b.HasData(
                        new
                        {
                            IdTipologiaSocio = 1,
                            DataAtualizacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7461),
                            DataCriacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7440),
                            DataFim = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7471),
                            DataInicio = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7472),
                            Descricao = "Normal",
                            Eliminado = false,
                            Montante = 0m,
                            Prioridicidade = 1,
                            Tipo = 0
                        },
                        new
                        {
                            IdTipologiaSocio = 2,
                            DataAtualizacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7476),
                            DataCriacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7475),
                            DataFim = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7484),
                            DataInicio = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7486),
                            Descricao = "Honorário",
                            Eliminado = false,
                            Montante = 0m,
                            Prioridicidade = 1,
                            Tipo = 1
                        });
                });

            modelBuilder.Entity("sga_stif.Models.TipoQuota", b =>
                {
                    b.Property<int>("IdTipoQuota")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Montante")
                        .HasColumnType("TEXT");

                    b.Property<int>("Priodicidade")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Tipo")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdTipoQuota");

                    b.ToTable("TipoQuota", (string)null);

                    b.HasData(
                        new
                        {
                            IdTipoQuota = 1,
                            DataAtualizacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7785),
                            DataCriacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7778),
                            Descricao = "Quinzenal",
                            Eliminado = false,
                            Montante = 0m,
                            Priodicidade = 1,
                            Tipo = 0
                        },
                        new
                        {
                            IdTipoQuota = 2,
                            DataAtualizacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7812),
                            DataCriacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7811),
                            Descricao = "Mensal",
                            Eliminado = false,
                            Montante = 0m,
                            Priodicidade = 1,
                            Tipo = 0
                        },
                        new
                        {
                            IdTipoQuota = 3,
                            DataAtualizacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7816),
                            DataCriacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7815),
                            Descricao = "Trimestral",
                            Eliminado = false,
                            Montante = 0m,
                            Priodicidade = 1,
                            Tipo = 0
                        },
                        new
                        {
                            IdTipoQuota = 4,
                            DataAtualizacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7825),
                            DataCriacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7823),
                            Descricao = "Semestral",
                            Eliminado = false,
                            Montante = 0m,
                            Priodicidade = 1,
                            Tipo = 0
                        },
                        new
                        {
                            IdTipoQuota = 5,
                            DataAtualizacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7829),
                            DataCriacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(7827),
                            Descricao = "Anual",
                            Eliminado = false,
                            Montante = 0m,
                            Priodicidade = 1,
                            Tipo = 0
                        });
                });

            modelBuilder.Entity("sga_stif.Models.Utilizador", b =>
                {
                    b.Property<int>("IdUtilizador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Apelido")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("BLOB");

                    b.Property<int?>("IdPerfil")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeUtilizador")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PalavraPasse")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdUtilizador");

                    b.HasIndex("IdPerfil");

                    b.ToTable("Utilizador", (string)null);

                    b.HasData(
                        new
                        {
                            IdUtilizador = 1,
                            Apelido = "Semedo",
                            DataAtualizacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(8275),
                            DataCriacao = new DateTime(2022, 3, 25, 11, 6, 1, 695, DateTimeKind.Local).AddTicks(8274),
                            Eliminado = false,
                            Email = "angelosemedo@sgastif.cv",
                            IdPerfil = 1,
                            Nome = "Angelo",
                            NomeUtilizador = "angelosemedo",
                            PalavraPasse = "$2a$11$7iUTMa8lY62GaiJ8rP8l.ediPwEV0jY8hL/VoPRwF1Zkch1T1Dg2K"
                        },
                        new
                        {
                            IdUtilizador = 2,
                            Apelido = "Veiga",
                            DataAtualizacao = new DateTime(2022, 3, 25, 11, 6, 2, 17, DateTimeKind.Local).AddTicks(8322),
                            DataCriacao = new DateTime(2022, 3, 25, 11, 6, 2, 17, DateTimeKind.Local).AddTicks(8301),
                            Eliminado = false,
                            Email = "odailtonveiga@sgastif.cv",
                            IdPerfil = 1,
                            Nome = "Odailton",
                            NomeUtilizador = "odailtonveiga",
                            PalavraPasse = "$2a$11$x07EDy26DyIjJKbpFGNMK.TlSXygNIITe/z5STsJXiitKQ/nGGM5S"
                        },
                        new
                        {
                            IdUtilizador = 3,
                            Apelido = "Varela",
                            DataAtualizacao = new DateTime(2022, 3, 25, 11, 6, 2, 351, DateTimeKind.Local).AddTicks(1748),
                            DataCriacao = new DateTime(2022, 3, 25, 11, 6, 2, 351, DateTimeKind.Local).AddTicks(1729),
                            Eliminado = false,
                            Email = "manuelvarela@sgastif.cv",
                            IdPerfil = 1,
                            Nome = "Manuel",
                            NomeUtilizador = "manuelvarela",
                            PalavraPasse = "$2a$11$Ms6NU2yPp9NCOMPTxWAuieMRaqbl.PmlKqaYOHVO8.dxjExGv0d0K"
                        },
                        new
                        {
                            IdUtilizador = 4,
                            Apelido = "Tavares",
                            DataAtualizacao = new DateTime(2022, 3, 25, 11, 6, 2, 641, DateTimeKind.Local).AddTicks(6713),
                            DataCriacao = new DateTime(2022, 3, 25, 11, 6, 2, 641, DateTimeKind.Local).AddTicks(6703),
                            Eliminado = false,
                            Email = "jair@sgastif.cv",
                            IdPerfil = 1,
                            Nome = "Jair",
                            NomeUtilizador = "jair",
                            PalavraPasse = "$2a$11$WTgWJ/UhpD/EiCDZ1WF5veuFy9FXI7hz4rvHLtga1YLio3KhRHgV."
                        });
                });

            modelBuilder.Entity("sga_stif.Models.Agencia", b =>
                {
                    b.HasOne("sga_stif.Models.Cidade", "Cidade")
                        .WithMany("Agencia")
                        .HasForeignKey("IdCidade")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("sga_stif.Models.InstituicaoFinanceira", "InstituicaoFinanceira")
                        .WithMany("Agencia")
                        .HasForeignKey("IdInstituicaoFinanceira")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cidade");

                    b.Navigation("InstituicaoFinanceira");
                });

            modelBuilder.Entity("sga_stif.Models.Beneficiario", b =>
                {
                    b.HasOne("sga_stif.Models.Socio", "Socio")
                        .WithMany("Beneficiario")
                        .HasForeignKey("IdSocio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Socio");
                });

            modelBuilder.Entity("sga_stif.Models.Cidade", b =>
                {
                    b.HasOne("sga_stif.Models.Ilha", "Ilha")
                        .WithMany("Cidade")
                        .HasForeignKey("IdIlha")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ilha");
                });

            modelBuilder.Entity("sga_stif.Models.EstadoSocio", b =>
                {
                    b.HasOne("sga_stif.Models.Socio", "Socio")
                        .WithMany()
                        .HasForeignKey("IdSocio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Socio");
                });

            modelBuilder.Entity("sga_stif.Models.JoiaSocio", b =>
                {
                    b.HasOne("sga_stif.Models.Joia", "Joia")
                        .WithMany("JoiaSocio")
                        .HasForeignKey("IdJoia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("sga_stif.Models.Socio", "Socio")
                        .WithMany("JoiaSocio")
                        .HasForeignKey("IdSocio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Joia");

                    b.Navigation("Socio");
                });

            modelBuilder.Entity("sga_stif.Models.MenuAcao", b =>
                {
                    b.HasOne("sga_stif.Models.Acao", "Acao")
                        .WithMany("MenuAcao")
                        .HasForeignKey("IdAcao");

                    b.HasOne("sga_stif.Models.Menu", "Menu")
                        .WithMany("MenuAcao")
                        .HasForeignKey("IdMenu");

                    b.Navigation("Acao");

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("sga_stif.Models.PerfilMenuAcao", b =>
                {
                    b.HasOne("sga_stif.Models.MenuAcao", "MenuAcao")
                        .WithMany("PerfilMenuAcao")
                        .HasForeignKey("IdMenuAcao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("sga_stif.Models.Perfil", "Perfil")
                        .WithMany("PerfilMenuAcao")
                        .HasForeignKey("IdPPerfil")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenuAcao");

                    b.Navigation("Perfil");
                });

            modelBuilder.Entity("sga_stif.Models.QuotaSocio", b =>
                {
                    b.HasOne("sga_stif.Models.PeriodoQuota", "PeriodoQuota")
                        .WithMany("QuotaSocio")
                        .HasForeignKey("IdPeriodoQuota")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("sga_stif.Models.Socio", "Socio")
                        .WithMany("QuotaSocio")
                        .HasForeignKey("IdSocio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PeriodoQuota");

                    b.Navigation("Socio");
                });

            modelBuilder.Entity("sga_stif.Models.Socio", b =>
                {
                    b.HasOne("sga_stif.Models.Agencia", "Agencia")
                        .WithMany("Socio")
                        .HasForeignKey("IdAgencia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("sga_stif.Models.TipoQuota", "TipoQuota")
                        .WithMany("Socio")
                        .HasForeignKey("IdTipoQuota")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("sga_stif.Models.TipologiaSocio", "TipologiaSocio")
                        .WithMany("Socio")
                        .HasForeignKey("IdTipologiaSocio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agencia");

                    b.Navigation("TipoQuota");

                    b.Navigation("TipologiaSocio");
                });

            modelBuilder.Entity("sga_stif.Models.Utilizador", b =>
                {
                    b.HasOne("sga_stif.Models.Perfil", "Perfil")
                        .WithMany("Utilizador")
                        .HasForeignKey("IdPerfil");

                    b.Navigation("Perfil");
                });

            modelBuilder.Entity("sga_stif.Models.Acao", b =>
                {
                    b.Navigation("MenuAcao");
                });

            modelBuilder.Entity("sga_stif.Models.Agencia", b =>
                {
                    b.Navigation("Socio");
                });

            modelBuilder.Entity("sga_stif.Models.Cidade", b =>
                {
                    b.Navigation("Agencia");
                });

            modelBuilder.Entity("sga_stif.Models.Ilha", b =>
                {
                    b.Navigation("Cidade");
                });

            modelBuilder.Entity("sga_stif.Models.InstituicaoFinanceira", b =>
                {
                    b.Navigation("Agencia");
                });

            modelBuilder.Entity("sga_stif.Models.Joia", b =>
                {
                    b.Navigation("JoiaSocio");
                });

            modelBuilder.Entity("sga_stif.Models.Menu", b =>
                {
                    b.Navigation("MenuAcao");
                });

            modelBuilder.Entity("sga_stif.Models.MenuAcao", b =>
                {
                    b.Navigation("PerfilMenuAcao");
                });

            modelBuilder.Entity("sga_stif.Models.Perfil", b =>
                {
                    b.Navigation("PerfilMenuAcao");

                    b.Navigation("Utilizador");
                });

            modelBuilder.Entity("sga_stif.Models.PeriodoQuota", b =>
                {
                    b.Navigation("QuotaSocio");
                });

            modelBuilder.Entity("sga_stif.Models.Socio", b =>
                {
                    b.Navigation("Beneficiario");

                    b.Navigation("JoiaSocio");

                    b.Navigation("QuotaSocio");
                });

            modelBuilder.Entity("sga_stif.Models.TipologiaSocio", b =>
                {
                    b.Navigation("Socio");
                });

            modelBuilder.Entity("sga_stif.Models.TipoQuota", b =>
                {
                    b.Navigation("Socio");
                });
#pragma warning restore 612, 618
        }
    }
}
