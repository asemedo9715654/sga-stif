// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using sga_stif.Models;

#nullable disable

namespace sga_stif.Migrations
{
    [DbContext(typeof(ContextoBaseDados))]
    [Migration("20220318114241_AdicaoDaTabelaMenuAcao")]
    partial class AdicaoDaTabelaMenuAcao
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.3");

            modelBuilder.Entity("sga_stif.Models.Acao", b =>
                {
                    b.Property<int>("IdAcao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdAcao");

                    b.ToTable("Acao", (string)null);

                    b.HasData(
                        new
                        {
                            IdAcao = 1,
                            DataAtualizacao = new DateTime(2022, 3, 18, 10, 42, 41, 13, DateTimeKind.Local).AddTicks(1019),
                            DataCriacao = new DateTime(2022, 3, 18, 10, 42, 41, 13, DateTimeKind.Local).AddTicks(1002),
                            Eliminado = false,
                            Nome = "Criar"
                        },
                        new
                        {
                            IdAcao = 2,
                            DataAtualizacao = new DateTime(2022, 3, 18, 10, 42, 41, 13, DateTimeKind.Local).AddTicks(1030),
                            DataCriacao = new DateTime(2022, 3, 18, 10, 42, 41, 13, DateTimeKind.Local).AddTicks(1029),
                            Eliminado = false,
                            Nome = "Editar"
                        },
                        new
                        {
                            IdAcao = 3,
                            DataAtualizacao = new DateTime(2022, 3, 18, 10, 42, 41, 13, DateTimeKind.Local).AddTicks(1032),
                            DataCriacao = new DateTime(2022, 3, 18, 10, 42, 41, 13, DateTimeKind.Local).AddTicks(1031),
                            Eliminado = false,
                            Nome = "Eliminar"
                        });
                });

            modelBuilder.Entity("sga_stif.Models.Menu", b =>
                {
                    b.Property<int>("IdMenu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IdMenuPai")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdMenu");

                    b.ToTable("Menu", (string)null);

                    b.HasData(
                        new
                        {
                            IdMenu = 1,
                            DataAtualizacao = new DateTime(2022, 3, 18, 10, 42, 41, 13, DateTimeKind.Local).AddTicks(1306),
                            DataCriacao = new DateTime(2022, 3, 18, 10, 42, 41, 13, DateTimeKind.Local).AddTicks(1304),
                            Descricao = "Gestão dos utilizadores",
                            Eliminado = false,
                            Nome = "Utilizador"
                        },
                        new
                        {
                            IdMenu = 2,
                            DataAtualizacao = new DateTime(2022, 3, 18, 10, 42, 41, 13, DateTimeKind.Local).AddTicks(1312),
                            DataCriacao = new DateTime(2022, 3, 18, 10, 42, 41, 13, DateTimeKind.Local).AddTicks(1311),
                            Descricao = "Gestão dos utilizadores",
                            Eliminado = false,
                            IdMenuPai = 1,
                            Nome = "Utilizador"
                        },
                        new
                        {
                            IdMenu = 3,
                            DataAtualizacao = new DateTime(2022, 3, 18, 10, 42, 41, 13, DateTimeKind.Local).AddTicks(1315),
                            DataCriacao = new DateTime(2022, 3, 18, 10, 42, 41, 13, DateTimeKind.Local).AddTicks(1314),
                            Descricao = "Gestão dos utilizadores",
                            Eliminado = false,
                            IdMenuPai = 1,
                            Nome = "Perfil"
                        });
                });

            modelBuilder.Entity("sga_stif.Models.MenuAcao", b =>
                {
                    b.Property<int>("IdMenuAcao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IdAcao")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IdMenu")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdMenuAcao");

                    b.HasIndex("IdAcao");

                    b.HasIndex("IdMenu");

                    b.ToTable("MenuAcao", (string)null);
                });

            modelBuilder.Entity("sga_stif.Models.Perfil", b =>
                {
                    b.Property<int>("IdPerfil")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdPerfil");

                    b.ToTable("Perfil", (string)null);
                });

            modelBuilder.Entity("sga_stif.Models.Utilizador", b =>
                {
                    b.Property<int>("IdUtilizador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Apelido")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Eliminado")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Foto")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("IdPerfil")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeUtilizador")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PalavraPasse")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PalavraPasseSalt")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdUtilizador");

                    b.HasIndex("IdPerfil");

                    b.ToTable("Utilizador", (string)null);
                });

            modelBuilder.Entity("sga_stif.Models.MenuAcao", b =>
                {
                    b.HasOne("sga_stif.Models.Acao", "Acao")
                        .WithMany("MenuAcao")
                        .HasForeignKey("IdAcao");

                    b.HasOne("sga_stif.Models.Menu", "Menu")
                        .WithMany("MenuAcao")
                        .HasForeignKey("IdMenu");

                    b.Navigation("Acao");

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("sga_stif.Models.Utilizador", b =>
                {
                    b.HasOne("sga_stif.Models.Perfil", "Perfil")
                        .WithMany("Utilizador")
                        .HasForeignKey("IdPerfil");

                    b.Navigation("Perfil");
                });

            modelBuilder.Entity("sga_stif.Models.Acao", b =>
                {
                    b.Navigation("MenuAcao");
                });

            modelBuilder.Entity("sga_stif.Models.Menu", b =>
                {
                    b.Navigation("MenuAcao");
                });

            modelBuilder.Entity("sga_stif.Models.Perfil", b =>
                {
                    b.Navigation("Utilizador");
                });
#pragma warning restore 612, 618
        }
    }
}
